{"version":3,"sources":["state/action-types/index.ts","components/wrappers/AuthWrapper.ts","components/inputs/Input.ts","styles/colors.ts","components/buttons/PlayButton.ts","components/wrappers/Box.ts","containers/LoginFlow.tsx","components/others/HomePresentation.tsx","pages/Home.tsx","components/headers/Nav.tsx","containers/Map.tsx","containers/ReChart.tsx","pages/CovidMap.tsx","styles/GlobalStyles.ts","containers/SignUpFlow.tsx","App.tsx","api/constant.ts","api/get.ts","state/sagas/covid.ts","state/reducers/covidReducer.ts","state/store.ts","index.tsx"],"names":["ActionTypes","AuthWrapper","styled","div","Input","input","primary","PlayButton","button","Box","pt","pr","pb","pl","mt","mr","mb","ml","StyledForm","ErrorMsg","p","LoginFlow","useState","error","ControlledInput","useHistory","props","inputRef","useRef","ref","onSubmit","e","preventDefault","console","log","target","submitForm","style","flex","display","padding","htmlFor","type","name","to","HomePresentation","Home","textAlign","NavBar","header","Nav","username","localStorage","getItem","IconButton","mapToken","Map","children","latitude","longitude","zoom","width","height","viewport","setViewport","coordinates","setCoordinates","dispatch","useDispatch","mapRef","handleViewportChange","useCallback","newViewport","handleGeocoderViewportChange","transitionDuration","handleMapClick","a","lngLat","features","length","choosenCountry","properties","iso_3166_1","SET_COUNTRY","payload","lng","lat","mapboxApiAccessToken","mapStyle","onViewportChange","onClick","position","size","ChartWrapper","displayStatus","ReChart","chartData","useSelector","state","covidData","data","chartActive","ResponsiveContainer","minWidth","AreaChart","id","x1","y1","x2","y2","offset","stopColor","strokeOpacity","stopOpacity","Area","dataKey","stroke","fill","XAxis","axisLine","tickLine","YAxis","tickCount","Tooltip","CartesianGrid","opacity","vertical","CovidMap","useEffect","FETCH_COVID_DATA_BY_COUNTRY","GlobalStyle","createGlobalStyle","SignUpWrapper","RegExp","SignUpFlow","App","basename","process","path","component","exact","BASE_URL","getCovidDataByCountry","country","axios","method","url","response","modifiedData","map","details","dateString","Date","toISOString","substr","Cases","push","watchGetCovidInfo","watchCountryChange","getCovidData","rootSaga","takeEvery","select","selectedCountry","call","put","FETCH_SUCCESS","all","initialState","loading","rootReducer","combineReducers","action","FETCH_ERROR","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b85553e6.chunk.js","sourcesContent":["export enum ActionTypes {\r\n  FETCH_COVID_DATA_BY_COUNTRY = \"FETCH_COVID_DATA_BY_COUNTRY\",\r\n  FETCH_SUCCESS = \"FETCH_SUCCESS\",\r\n  FETCH_ERROR = \"FETCH_ERROR\",\r\n  SET_COUNTRY = \"SET_COUNTRY\",\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const AuthWrapper = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n  padding: 1rem 0.1rem;\r\n  border: 1px solid #f5f5f5;\r\n  width: 100%;\r\n  font-size: 20px;\r\n`;\r\n","export const primary = \"#1976D2\";\r\n","import styled from \"styled-components\";\r\nimport { primary } from \"../../styles/colors\";\r\n\r\nexport const PlayButton = styled.button`\r\n  cursor: pointer;\r\n  border: none;\r\n  outline: none;\r\n  padding: 0.5rem 1rem;\r\n  background: ${primary};\r\n  color: #fff;\r\n  font-size: 16px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\ninterface IBox {\r\n  pt?: string;\r\n  pr?: string;\r\n  pb?: string;\r\n  pl?: string;\r\n\r\n  mt?: string;\r\n  mr?: string;\r\n  mb?: string;\r\n  ml?: string;\r\n}\r\n\r\nexport const Box = styled.div<IBox>`\r\n  padding-top: ${({ pt }) => `${pt}`};\r\n  padding-right: ${({ pr }) => `${pr}`};\r\n  padding-bottom: ${({ pb }) => `${pb}`};\r\n  padding-left: ${({ pl }) => `${pl}`};\r\n\r\n  margin-top: ${({ mt }) => `${mt}`};\r\n  margin-right: ${({ mr }) => `${mr}`};\r\n  margin-bottom: ${({ mb }) => `${mb}`};\r\n  margin-left: ${({ ml }) => `${ml}`};\r\n`;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Input } from \"../components/inputs/Input\";\r\nimport styled from \"styled-components\";\r\nimport { PlayButton } from \"../components/buttons/PlayButton\";\r\nimport { Box } from \"../components/wrappers/Box\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StyledForm = styled.div`\r\n  min-width: 95%;\r\n  padding: 2rem;\r\n  border: 1px solid #ddd;\r\n  margin: auto;\r\n  min-width: 22rem;\r\n  @media only screen and (max-width: 500px) {\r\n    width: 100% !important;\r\n  }\r\n`;\r\n\r\nexport const ErrorMsg = styled.p`\r\n  color: #ff0000;\r\n  font-size: 12px;\r\n  padding-bottom: 0.2rem;\r\n`;\r\n\r\nexport const LoginFlow = (): JSX.Element => {\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const ControlledInput = (props: any) => {\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    return <Input ref={inputRef} {...props} />;\r\n  };\r\n\r\n  const submitForm = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    console.log(e.target);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => submitForm(e)}\r\n      style={{ flex: \"1\", display: \"flex\", padding: \"0 1rem\" }}\r\n    >\r\n      <StyledForm>\r\n        <Box mb=\"2rem\">\r\n          <h1>Sign in</h1>\r\n        </Box>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <Input type=\"text\" name=\"email\" />\r\n        <Box mb=\"0.5rem\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <ControlledInput type=\"password\" name=\"password\" />\r\n        </Box>\r\n        <Box>\r\n          <ErrorMsg>{error}</ErrorMsg>\r\n        </Box>\r\n        <Box mb=\"1rem\">\r\n          <p>\r\n            Don`t have account? Sign up <Link to=\"/signup\">here.</Link>\r\n          </p>\r\n        </Box>\r\n        <PlayButton type=\"submit\">Sign in</PlayButton>\r\n      </StyledForm>\r\n    </form>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { primary } from \"../../styles/colors\";\r\n\r\nexport const HomePresentation = styled.div`\r\n  flex: 1;\r\n  padding: 2rem 0.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: #fff;\r\n  background: ${primary};\r\n`;\r\n","import React from \"react\";\r\nimport { AuthWrapper } from \"../components/wrappers/AuthWrapper\";\r\nimport { LoginFlow } from \"../containers/LoginFlow\";\r\nimport { HomePresentation } from \"../components/others/HomePresentation\";\r\n\r\nexport const Home = (): JSX.Element => {\r\n  return (\r\n    <AuthWrapper>\r\n      <HomePresentation>\r\n        <h1>Hello there!</h1>\r\n        <h3 style={{ textAlign: \"center\" }}>\r\n          Get live data about <br /> Covid-19 with a few clicks!\r\n        </h3>\r\n        <div />\r\n      </HomePresentation>\r\n      <LoginFlow />\r\n    </AuthWrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { primary } from \"../../styles/colors\";\r\n\r\ninterface INav {\r\n  maxX?: number;\r\n  maxY?: number;\r\n  updatedTimes?: number;\r\n}\r\n\r\nconst NavBar = styled.header<INav>`\r\n  display: flex;\r\n  width: 100%;\r\n  min-height: 7vh;\r\n  padding: 1rem;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: ${primary};\r\n  box-shadow: 30px 0rem 50px #000;\r\n  color: #fff;\r\n`;\r\n\r\nexport const Nav = (): JSX.Element => {\r\n  const username = localStorage.getItem(\"email\") || \"unknown\";\r\n\r\n  return (\r\n    <NavBar>\r\n      <h1>Covidinho</h1>\r\n\r\n      <span>User: {username}</span>\r\n    </NavBar>\r\n  );\r\n};\r\n","import React, { useState, useRef, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport ReactMapGL from \"react-map-gl\";\r\nimport { Marker } from \"react-map-gl\";\r\nimport Geocoder from \"react-map-gl-geocoder\";\r\nimport { ActionTypes } from \"../state/action-types\";\r\nimport { RiVirusFill } from \"react-icons/ri\";\r\nimport styled from \"styled-components\";\r\n\r\nconst IconButton = styled.button`\r\n  border: none;\r\n  background: none;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\ninterface IViewport {\r\n  latitude: number;\r\n  longitude: number;\r\n  zoom: number;\r\n  width: string;\r\n  height: string;\r\n}\r\n\r\nexport const mapToken =\r\n  \"pk.eyJ1IjoiZ2Fsdm90YXMiLCJhIjoiY2tuaHBsanE4Mm5vcjJxbGM2MGRrNHN3OCJ9.ODxdS1urs6_NNA5Z4NWiFQ\";\r\n\r\nexport const Map = ({ children }: { children: JSX.Element }): JSX.Element => {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 45.4211,\r\n    longitude: -75.6903,\r\n    zoom: 1,\r\n    width: \"100vw\",\r\n    height: \"93vh\",\r\n  });\r\n\r\n  const [coordinates, setCoordinates] = useState<any>();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const mapRef = useRef(null);\r\n  const handleViewportChange = useCallback(\r\n    (newViewport) => setViewport(newViewport),\r\n    []\r\n  );\r\n\r\n  const handleGeocoderViewportChange = useCallback((newViewport) => {\r\n    const geocoderDefaultOverrides = { transitionDuration: 1000 };\r\n\r\n    return handleViewportChange({\r\n      ...newViewport,\r\n      ...geocoderDefaultOverrides,\r\n    });\r\n  }, []);\r\n\r\n  const handleMapClick = async (e: any) => {\r\n    const { lngLat } = e;\r\n    if (e.features.length) {\r\n      const choosenCountry = e.features[0].properties.iso_3166_1;\r\n      choosenCountry &&\r\n        dispatch({ type: ActionTypes.SET_COUNTRY, payload: choosenCountry });\r\n    }\r\n    console.log(lngLat);\r\n\r\n    setCoordinates({ lng: lngLat[0], lat: lngLat[1] });\r\n  };\r\n\r\n  console.log(coordinates);\r\n  return (\r\n    <ReactMapGL\r\n      {...viewport}\r\n      ref={mapRef}\r\n      mapboxApiAccessToken={mapToken}\r\n      mapStyle=\"mapbox://styles/galvotas/cknhqad261jih17rxra99b84w\"\r\n      onViewportChange={(viewport: IViewport) => setViewport(viewport)}\r\n      onClick={handleMapClick}\r\n    >\r\n      <Geocoder\r\n        mapRef={mapRef}\r\n        onViewportChange={handleGeocoderViewportChange}\r\n        mapboxApiAccessToken={mapToken}\r\n        position=\"top-left\"\r\n      />\r\n      <Marker longitude={-75.6903} latitude={45.4211}>\r\n        <IconButton>\r\n          <RiVirusFill size={30} />\r\n        </IconButton>\r\n      </Marker>\r\n      {children}\r\n    </ReactMapGL>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  XAxis,\r\n  Tooltip,\r\n  CartesianGrid,\r\n  Area,\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  YAxis,\r\n} from \"recharts\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IChartWrapper {\r\n  displayStatus: boolean;\r\n}\r\n\r\nconst ChartWrapper = styled.div<IChartWrapper>`\r\n  width: 100vw;\r\n  min-height: 30vh;\r\n  position: absolute;\r\n  bottom: 0;\r\n  background: rgb(246, 245, 240);\r\n  background: linear-gradient(\r\n    180deg,\r\n    rgba(246, 245, 240, 0.3617822128851541) 0%,\r\n    rgba(21, 21, 21, 0.7035189075630253) 0%,\r\n    rgba(21, 21, 21, 1) 100%\r\n  );\r\n  padding: 2rem;\r\n  box-shadow: 1rem 1rem 4rem 2rem #fff;\r\n  display: ${(displayStatus) => (displayStatus ? \"block\" : \"none\")};\r\n  z-index: 2;\r\n`;\r\n\r\nexport const ReChart = (): JSX.Element => {\r\n  const chartData = useSelector((state: any) => state.covidData.data);\r\n\r\n  const [chartActive, setChartActive] = useState(false);\r\n\r\n  console.log(chartData);\r\n\r\n  return (\r\n    <ChartWrapper displayStatus={!chartActive}>\r\n      <ResponsiveContainer minWidth={500} height={300}>\r\n        <AreaChart data={chartData && chartData}>\r\n          <defs>\r\n            <linearGradient id=\"color\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n              <stop offset=\"0%\" stopColor=\"#2451b7\" strokeOpacity={0.4} />\r\n              <stop offset=\"75%\" stopColor=\"#2451b7\" stopOpacity={0.05} />\r\n            </linearGradient>\r\n          </defs>\r\n          <Area dataKey=\"Cases\" stroke=\"#2451b7\" fill=\"url(#color)\" />\r\n          <XAxis dataKey=\"dateString\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            dataKey=\"Cases\"\r\n            axisLine={false}\r\n            tickLine={false}\r\n            tickCount={8}\r\n          />\r\n          <Tooltip />\r\n          <CartesianGrid opacity={0.1} vertical={false} />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </ChartWrapper>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ActionTypes } from \"../state/action-types\";\r\nimport { Nav } from \"../components/headers/Nav\";\r\nimport { Map } from \"../containers/Map\";\r\nimport { ReChart } from \"../containers/ReChart\";\r\n\r\nexport const CovidMap = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: ActionTypes.FETCH_COVID_DATA_BY_COUNTRY });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <Map>\r\n        <ReChart />\r\n      </Map>\r\n    </>\r\n  );\r\n};\r\n\r\n/*\r\n{data && data.length\r\n          ? data.map(\r\n              ({\r\n                data: { color },\r\n                _id,\r\n                x,\r\n                y,\r\n              }: {\r\n                data: { name: string; color: string };\r\n                x: number;\r\n                y: number;\r\n                _id: string;\r\n              }) => {\r\n                return (\r\n                  <Rectangle\r\n                    positionX={Number(x)}\r\n                    positionY={Number(y) - 10000}\r\n                    width=\"20px\"\r\n                    height=\"20px\"\r\n                    bgrColor={color}\r\n                    key={_id}\r\n                  />\r\n                );\r\n              }\r\n            )\r\n          : \"\"}\r\n          */\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n* {\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n    font-family: 'Open Sans', sans-serif;\r\n\r\n}\r\nbody {\r\n    font-size: 13px;\r\n    overflow-x: hidden;\r\n}\r\nh1, h2, h3, h4, h5, h6 {\r\n    font-family: 'Raleway', sans-serif;\r\n}\r\n\r\n\r\nh3 {\r\n    line-height: 34px;\r\n}\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Input } from \"../components/inputs/Input\";\r\nimport styled from \"styled-components\";\r\nimport { PlayButton } from \"../components/buttons/PlayButton\";\r\nimport { Box } from \"../components/wrappers/Box\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { StyledForm, ErrorMsg } from \"./LoginFlow\";\r\n\r\nconst emailPattern = new RegExp(\r\n  /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n);\r\n\r\nconst SignUpWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const SignUpFlow = (): JSX.Element => {\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const submitForm = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    console.log(e);\r\n  };\r\n\r\n  return (\r\n    <SignUpWrapper>\r\n      <form onSubmit={submitForm} style={{ flex: \"1\", display: \"flex\" }}>\r\n        <StyledForm>\r\n          <Box mb=\"2rem\">\r\n            <h1>Sign up</h1>\r\n          </Box>\r\n          <Box pb=\"1rem\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <Input type=\"text\" name=\"email\" />\r\n          </Box>\r\n          <Box mb=\"0.5rem\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <Input type=\"password\" name=\"password\" />\r\n          </Box>\r\n          <Box mb=\"0.5rem\">\r\n            <label htmlFor=\"password2\">Repeat password</label>\r\n            <Input type=\"password\" name=\"password2\" />\r\n          </Box>\r\n          <Box>\r\n            <ErrorMsg>{error}</ErrorMsg>\r\n          </Box>\r\n          <Box mb=\"1rem\">\r\n            <p>\r\n              Already have an account? Sign in <Link to=\"/\">here.</Link>\r\n            </p>\r\n          </Box>\r\n          <PlayButton type=\"submit\">Sign up</PlayButton>\r\n        </StyledForm>\r\n      </form>\r\n    </SignUpWrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Home } from \"./pages/Home\";\r\nimport { CovidMap } from \"./pages/CovidMap\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { GlobalStyle } from \"./styles/GlobalStyles\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { SignUpFlow } from \"./containers/SignUpFlow\";\r\nimport { ReChart } from \"./containers/ReChart\";\r\n\r\nexport const App = (): JSX.Element => {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Route path=\"/\" component={Home} exact />\r\n        <Route path=\"/covidmap\" component={CovidMap} exact />\r\n        <Route path=\"/signup\" component={SignUpFlow} exact />\r\n        <Route path=\"/chart\" component={ReChart} exact />\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n","export const BASE_URL = \"https://api.covid19api.com/\";\r\n\r\nexport const COUNTRY_BY_COORD =\r\n  \"https://www.mapquestapi.com/geocoding/v1/reverse\";\r\n\r\n//example endpoint\r\n//from=2020-03-01T00:00:00Z&to=2020-04-01T00:00:00Z\r\n","import axios from \"axios\";\r\nimport { BASE_URL, COUNTRY_BY_COORD } from \"./constant\";\r\nimport { mapToken } from \"../containers/Map\";\r\n\r\nconst mapQuestApiKey = \"SK52bBTeRqYH1WQPMm22V3XKE4h0pWg2\";\r\n\r\nexport const handleGetRequest = async <T>(url?: string): Promise<T> => {\r\n  const response = await axios({\r\n    method: \"GET\",\r\n    url: BASE_URL + url,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const getCovidDataByCountry = async <T>(\r\n  country?: string\r\n): Promise<T> => {\r\n  const response: any = await axios({\r\n    method: \"GET\",\r\n    url: `${BASE_URL}country/${country}/status/confirmed?from=2020-03-01T00:00:00Z&to=2021-04-01T00:00:00Z`,\r\n  });\r\n  let dateString: string;\r\n  const modifiedData: any = [];\r\n  response.data.map((details: { Cases: number; Date: string }) => {\r\n    dateString = new Date(details.Date).toISOString().substr(0, 10);\r\n\r\n    const { Cases } = details;\r\n\r\n    modifiedData.push({ dateString, Cases });\r\n  });\r\n\r\n  return modifiedData;\r\n};\r\n\r\nexport const getCountryByCoordinates = async <T>(\r\n  lang: string,\r\n  lat: string\r\n): Promise<T> => {\r\n  const response: any = await axios({\r\n    method: \"GET\",\r\n    url: `https://www.mapquestapi.com/geocoding/v1/reverse?key=${mapQuestApiKey}&location=${lang}%2C${lat}&outFormat=json&thumbMaps=false`,\r\n  });\r\n  return await response.data;\r\n};\r\n\r\n//39.755695%2C-104.995986&outFormat=json&thumbMaps=false\r\n\r\n//example endpoint\r\n//from=2020-03-01T00:00:00Z&to=2020-04-01T00:00:00Z\r\n","import { takeEvery, call, put, all, select } from \"redux-saga/effects\";\r\nimport { getCovidDataByCountry } from \"../../api/get\";\r\nimport { ActionTypes } from \"../action-types\";\r\n\r\nexport function* watchGetCovidInfo(): Generator<unknown> {\r\n  yield takeEvery(ActionTypes.FETCH_COVID_DATA_BY_COUNTRY, getCovidData);\r\n}\r\n\r\nexport function* watchCountryChange(): Generator<unknown> {\r\n  yield takeEvery(ActionTypes.SET_COUNTRY, getCovidData);\r\n}\r\nexport function* getCovidData(): Generator<unknown> {\r\n  const selectedCountry: any = yield select((state) => state.covidData.country);\r\n\r\n  const covidData: any = yield call(getCovidDataByCountry, selectedCountry);\r\n\r\n  console.log(covidData);\r\n\r\n  yield put({ type: ActionTypes.FETCH_SUCCESS, payload: covidData });\r\n}\r\n\r\nexport function* rootSaga(): Generator<unknown> {\r\n  yield all([watchGetCovidInfo(), watchCountryChange()]);\r\n}\r\n","import { Action } from \"../actions\";\r\nimport { ActionTypes } from \"../action-types\";\r\n\r\ninterface IBoardData {\r\n  loading: boolean;\r\n  error: null | boolean;\r\n  country: string;\r\n  data: [] | unknown;\r\n}\r\n\r\nconst initialState: IBoardData = {\r\n  loading: false,\r\n  error: null,\r\n  country: \"LT\",\r\n  data: [],\r\n};\r\n\r\nexport const covidReducer = (\r\n  state = initialState,\r\n  action: Action\r\n): IBoardData => {\r\n  switch (action.type) {\r\n    case ActionTypes.FETCH_COVID_DATA_BY_COUNTRY:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ActionTypes.FETCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        loading: false,\r\n      };\r\n    case ActionTypes.FETCH_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case ActionTypes.SET_COUNTRY:\r\n      return {\r\n        ...state,\r\n        country: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { rootSaga } from \"./sagas/covid\";\r\nimport { covidReducer } from \"./reducers/covidReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  covidData: covidReducer,\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./state/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}
{"version":3,"sources":["state/action-types/index.ts","styles/colors.ts","components/buttons/Button.ts","components/buttons/ButtonGroup.ts","components/buttons/IconButton.ts","components/buttons/SimpleButton.ts","components/buttons/ProfileButton.ts","config/firebase.ts","config/databse.ts","contexts/AuthContext.tsx","helpers/formatLocation.ts","helpers/firestore.ts","components/profile/ProfilePopup.ts","components/others/Dropdown.ts","hooks/index.ts","components/wrappers/AuthWrapper.ts","components/wrappers/Box.ts","components/wrappers/ChartWrapper.ts","components/wrappers/NoResultsContainer.ts","components/wrappers/LoaderWrapper.ts","components/wrappers/TableWrapper.ts","components/wrappers/SignUpWrapper.ts","components/headers/Nav.tsx","containers/VaccinesChart.tsx","components/inputs/Input.ts","components/inputs/Select.ts","containers/CovidChart.tsx","helpers/formatHelpers.ts","assets/oval.svg","assets/greenOval.svg","components/map/CustomMarker.tsx","components/map/CustomInfoWindow.tsx","components/map/GoogleMapsSearch.tsx","constants/googleMaps.ts","containers/GoogleMap.tsx","components/errors/ErrorMsg.ts","components/forms/StyledForm.ts","containers/LoginFlow.tsx","components/tables/Table.tsx","components/modals/CovidModal.tsx","pages/CovidMap.tsx","api/constant.ts","layouts/HomePresentation.tsx","pages/Home.tsx","pages/ResetPassword.tsx","pages/Signup.tsx","styles/GlobalStyles.ts","App.tsx","api/get.ts","state/sagas/chart.ts","state/sagas/covid.ts","state/reducers/chartReducer.ts","state/reducers/loading&error.ts","state/reducers/modals.ts","state/store.ts","index.tsx"],"names":["ActionTypes","MarkerColors","primary","secondary","Button","styled","button","width","ButtonGroup","div","IconButton","SimpleButton","color","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Providers","google","auth","GoogleAuthProvider","github","GithubAuthProvider","locationsCollection","firestore","collection","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","dispatch","useDispatch","signInWithGoogle","a","signInWithPopup","signInWithGithub","useEffect","onAuthStateChanged","user","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","Geocode","fromLatLng","toString","then","response","address","country","countryCode","i","results","address_components","length","j","types","long_name","short_name","formatLocation","type","SET_COUNTRY","payload","GET_CHART_DATA","iso2","userId","data","doc","set","postLocationToFirestore","uid","error","console","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","Provider","ProfilePopup","driveIn","css","Dropdown","useAppSelector","useSelector","AuthWrapper","Box","pt","pr","pb","pl","mt","mr","mb","ml","ChartsWrapper","NoResultsContainer","TableWrapper","SignUpWrapper","NavBar","header","GlobalCases","GlobalCasesContent","GlobalCasesContentWrapper","Nav","setError","state","chartData","globalCases","cases","deaths","popupActive","setPopUpActive","history","useHistory","handleMouseEnter","useCallback","handleMouseLeave","handleLogout","push","animatedDeaths","animateToNumber","includeComma","delay","config","tension","friction","animationType","animatedCases","toggleModal","TOGGLE_MODAL","variant","align","height","onClick","onMouseEnter","onMouseLeave","size","VaccineChart","vaccineData","vaccinated","setData","formattedData","timeline","Object","entries","map","key","date","Date","toLocaleDateString","Vaccinated","formatVaccineData","ResponsiveContainer","className","minHeight","minWidth","LineChart","id","x1","y1","x2","y2","offset","stopColor","strokeOpacity","stopOpacity","Area","dataKey","stroke","fill","XAxis","axisLine","tickLine","YAxis","tickCount","Tooltip","CartesianGrid","opacity","vertical","Line","Input","input","Select","select","Footer","footer","ChartsDescriptionWrapper","HideOnMobile","CovidChart","countriesInfo","loadingAndError","marginB","placeholder","onChange","e","CONTROL_CHART_PERIOD","target","formatMarkerSizeByCases","CustomMarker","countryInfo","onMouseOver","onMouseOut","animation","maps","Animation","BOUNCE","undefined","options","optimized","position","lat","lng","long","clickable","icon","url","greenOval","oval","anchor","Point","origin","window","scaledSize","Size","nf","Intl","NumberFormat","CountryInfo","CustomInfoWindow","selected","srcSet","flag","style","marginT","format","population","GoogleMapsSearch","panTo","usePlacesAutocomplete","ready","suggestions","status","setValue","clearSuggestions","handleSelect","getGeocode","getLatLng","log","onSelect","disabled","description","libraries","mapContainerStyle","disableDefaultUI","zoomControl","zoomControlOptions","center","CustomGoogleMap","covidData","setSelected","mapSelector","useMemo","mapRef","useLoadScript","googleMapsApiKey","process","isLoaded","loadError","onMapLoad","handleMarkerMouseOver","item","setZoom","handleMouseClick","savedData","casesPerOneMillion","_id","Math","random","zoom","onLoad","ErrorMsg","p","StyledForm","LoginFlow","submitForm","preventDefault","currentTarget","message","loginWithGithub","loginWithGoogle","margin","onSubmit","htmlFor","name","required","to","default_columns","Header","accessor","Table","filterInput","setFilterInput","handleFilterChange","setFilter","recovered","tests","columns","useTable","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","nextPage","previousPage","canPreviousPage","canNextPage","pageOptions","gotoPage","pageCount","pageIndex","GET_COVID_DATA","headerGroup","getHeaderGroupProps","uuid","headers","column","getHeaderProps","getSortByToggleProps","render","row","getRowProps","cells","cell","getCellProps","as","marginLeft","defaultValue","pageNum","Number","Modal","modalAnimation","CloseModal","CovidModal","modalStatus","modals","covidModal","closeModal","memoModal","setApiKey","URLS","CovidMap","memoChart","HomePresentation","Home","textAlign","ResetPassword","setMessage","Signup","password2","GlobalStyle","createGlobalStyle","PrivateRoute","props","App","basename","path","component","exact","handleGetRequest","axios","method","PRIMARY_API","watchChartAction","getChartData","formatData","Cases","each","Recovered","values","Deaths","takeEvery","period","countryISO2","put","LOADING_TRUE","all","call","vaccinesData","modifiedChartData","GET_CHART_DATA_SUCCESS","ERROR_FALSE","ERROR_TRUE","LOADING_FALSE","watchGetCovidInfo","getCovidData","rootSaga","SET_GLOBAL_CASES","GET_COVID_DATA_SUCCESS","initialState","rootReducer","combineReducers","action","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.70429d41.chunk.js","sourcesContent":["export enum ActionTypes {\r\n  GET_COVID_DATA = \"FETCH_COVID_DATA_BY_COUNTRY\",\r\n  GET_COVID_DATA_SUCCESS = \"COVID_DATA_SUCCESS\",\r\n\r\n  GET_CHART_DATA = \"FETCH_CHART_DATA\",\r\n  GET_CHART_DATA_SUCCESS = \"CHART_DATA_SUCCESS\",\r\n\r\n  LOADING_FALSE = \"LOADING_FALSE\",\r\n  LOADING_TRUE = \"LOADING_TRUE\",\r\n\r\n  ERROR_TRUE = \"ERROR_TRUE\",\r\n  ERROR_FALSE = \"ERROR_FALSE\",\r\n\r\n  SET_COUNTRY = \"SET_COUNTRY\",\r\n\r\n  SET_GLOBAL_CASES = \"SET_GLOBAL_CASES\",\r\n\r\n  TOGGLE_MODAL = \"TOGGLE_MODAL\",\r\n\r\n  CONTROL_CHART_PERIOD = \"CONTROL_CHART_PERIOD\",\r\n}\r\n","export const primary = \"#fffce8\";\r\nexport const secondary = \"#3E363F\";\r\n\r\nexport const choosenMarker = \"%232E8B57\";\r\n\r\nexport enum MarkerColors {\r\n  lightMarker = \"%23fd5c63\",\r\n  mediumMarker = \"%23E32636\",\r\n  mediumStrongMarker = \"%23D2122E\",\r\n  strongMarker = \"%23AA0000\",\r\n}\r\n","import styled from \"styled-components\";\r\nimport { secondary } from \"../../styles/colors\";\r\n\r\ninterface IButton {\r\n  width?: string;\r\n}\r\n\r\nexport const Button = styled.button<IButton>`\r\n  cursor: pointer;\r\n  border: none;\r\n  outline: none;\r\n  padding: 0.5rem 1rem;\r\n  color: #fff;\r\n  background: ${secondary};\r\n  width: ${({ width }) => (width ? width : \"5rem\")};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ButtonGroup = styled.div`\r\n  width: fit-content;\r\n  display: flex;\r\n  gap: 1rem;\r\n  &:not(:last-child) {\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const IconButton = styled.button`\r\n  border: none;\r\n  background: none;\r\n  cursor: pointer;\r\n  padding: 0.2rem;\r\n  outline: none;\r\n  &:active {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { primary, secondary } from \"../../styles/colors\";\r\n\r\nexport const SimpleButton = styled.button`\r\n  background: none;\r\n  border: 1px solid ${secondary};\r\n  border-top: none;\r\n  color: ${({ color }) => (color ? color : \"#000\")};\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  font-size: 14px;\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  &:hover {\r\n    color: #ddd;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Button } from \"./Button\";\r\n\r\nexport const ProfileButton = styled(Button)`\r\n  padding: 0.3rem;\r\n  font-size: 11px;\r\n  width: 100%;\r\n`;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAlnEQqtB1Fz_KkK3RFziKarBy2qyNUUGs\",\r\n  authDomain: \"covidinho-892bd.firebaseapp.com\",\r\n  projectId: \"covidinho-892bd\",\r\n  storageBucket: \"covidinho-892bd.appspot.com\",\r\n  messagingSenderId: \"422531087376\",\r\n  appId: \"1:422531087376:web:515f31eecfad907c959e95\",\r\n  measurementId: \"G-SVB6HMD83T\",\r\n};\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nexport const Providers = {\r\n  google: new firebase.auth.GoogleAuthProvider(),\r\n  github: new firebase.auth.GithubAuthProvider(),\r\n};\r\n\r\nexport const auth = app.auth();\r\n\r\nexport default app;\r\n","import app from \"./firebase\";\r\nimport \"firebase/firestore\";\r\n\r\nconst db = app.firestore();\r\n\r\nexport const locationsCollection = db.collection(\"locations\");\r\n","import firebase from \"firebase/app\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Geocode from \"react-geocode\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { auth, Providers } from \"../config/firebase\";\r\nimport { postLocationToFirestore } from \"../helpers/firestore\";\r\nimport { formatLocation } from \"../helpers/formatLocation\";\r\nimport { ActionTypes } from \"../state/action-types\";\r\n\r\ntype User = firebase.User;\r\n\r\ninterface IContextValues {\r\n  currentUser?: User | null;\r\n  login: (\r\n    email: string,\r\n    password: string\r\n  ) => Promise<firebase.auth.UserCredential>;\r\n  signup: (\r\n    email: string,\r\n    password: string\r\n  ) => Promise<firebase.auth.UserCredential>;\r\n  resetPassword: (email: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  signInWithGoogle: () => Promise<firebase.auth.UserCredential>;\r\n  signInWithGithub: () => Promise<firebase.auth.UserCredential>;\r\n}\r\n\r\nconst AuthContext = React.createContext<IContextValues>({} as any);\r\n\r\nexport const useAuth = (): IContextValues => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({\r\n  children\r\n}: {\r\n  children: JSX.Element;\r\n}): JSX.Element => {\r\n  const [currentUser, setCurrentUser] = useState<User | null>();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const signup = (email: string, password: string) => {\r\n    return auth.createUserWithEmailAndPassword(email, password);\r\n  };\r\n\r\n  const login = (email: string, password: string) => {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  };\r\n\r\n  const logout = () => {\r\n    return auth.signOut();\r\n  };\r\n\r\n  const resetPassword = (email: string) => {\r\n    return auth.sendPasswordResetEmail(email);\r\n  };\r\n\r\n  const signInWithGoogle = async () => {\r\n    return auth.signInWithPopup(Providers.google);\r\n  };\r\n\r\n  const signInWithGithub = async () => {\r\n    return auth.signInWithPopup(Providers.github);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentUser && \"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition(function ({\r\n        coords: { latitude, longitude }\r\n      }) {\r\n        Geocode.fromLatLng(latitude.toString(), longitude.toString()).then(\r\n          (response) => {\r\n            const address = formatLocation(response);\r\n            dispatch({\r\n              type: ActionTypes.SET_COUNTRY,\r\n              payload: address.countryCode\r\n            });\r\n            dispatch({\r\n              type: ActionTypes.GET_CHART_DATA\r\n            });\r\n            postLocationToFirestore(\r\n              address.country,\r\n              address.countryCode,\r\n              latitude,\r\n              longitude,\r\n              currentUser.uid\r\n            );\r\n          },\r\n          (error) => {\r\n            console.error(error);\r\n          }\r\n        );\r\n      });\r\n    }\r\n    dispatch({ type: ActionTypes.SET_COUNTRY, payload: \"LT\" });\r\n    dispatch({ type: ActionTypes.GET_CHART_DATA });\r\n  }, [currentUser]);\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    signInWithGoogle,\r\n    signInWithGithub\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","export const formatLocation = (\r\n  //Google api any response\r\n  response: {\r\n    results: {\r\n      address_components: {\r\n        types: string[];\r\n        long_name: string;\r\n        short_name: string;\r\n      }[];\r\n    }[];\r\n  }\r\n): { country: string; countryCode: string } => {\r\n  let address = {\r\n    country: \"\",\r\n    countryCode: \"\",\r\n  };\r\n  for (let i = 0; i < response.results[0].address_components.length; i++) {\r\n    for (\r\n      let j = 0;\r\n      j < response.results[0].address_components[i].types.length;\r\n      j++\r\n    ) {\r\n      switch (response.results[0].address_components[i].types[j]) {\r\n        case \"country\":\r\n          address = {\r\n            country: response.results[0].address_components[i].long_name,\r\n            countryCode: response.results[0].address_components[i].short_name,\r\n          };\r\n      }\r\n    }\r\n  }\r\n  return address;\r\n};\r\n","import { locationsCollection } from \"../config/databse\";\r\n\r\nexport const postLocationToFirestore = (\r\n  country: string,\r\n  iso2: string,\r\n  latitude: number,\r\n  longitude: number,\r\n  userId: string\r\n): void => {\r\n  const data = {\r\n    country,\r\n    iso2,\r\n    latitude,\r\n    longitude,\r\n  };\r\n  locationsCollection.doc(userId).set(data);\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\ninterface IProfilePopup {\r\n  driveIn: boolean;\r\n}\r\n\r\nexport const ProfilePopup = styled.div<IProfilePopup>`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  min-height: 100px;\r\n  min-width: 140px;\r\n  padding: 1rem;\r\n  background: #ffff;\r\n  border-radius: 0.2rem;\r\n  color: #000;\r\n  transform: translateY(35%);\r\n  transition: 0.3s ease-in-out;\r\n  opacity: 0;\r\n  z-index: -1;\r\n  font-size: 16px;\r\n  ${({ driveIn }) =>\r\n    driveIn &&\r\n    css`\r\n      opacity: 1;\r\n      z-index: 50;\r\n    `}\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Dropdown = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n`;\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport type { RootState } from \"../state/store\";\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AuthWrapper = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\ninterface IBox {\r\n  pt?: string;\r\n  pr?: string;\r\n  pb?: string;\r\n  pl?: string;\r\n\r\n  mt?: string;\r\n  mr?: string;\r\n  mb?: string;\r\n  ml?: string;\r\n  width?: string;\r\n}\r\n\r\nexport const Box = styled.div<IBox>`\r\n  padding-top: ${({ pt }) => `${pt}`};\r\n  padding-right: ${({ pr }) => `${pr}`};\r\n  padding-bottom: ${({ pb }) => `${pb}`};\r\n  padding-left: ${({ pl }) => `${pl}`};\r\n\r\n  margin-top: ${({ mt }) => `${mt}`};\r\n  margin-right: ${({ mr }) => `${mr}`};\r\n  margin-bottom: ${({ mb }) => `${mb}`};\r\n  margin-left: ${({ ml }) => `${ml}`};\r\n  width: ${({ width }) => `${width}`};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ChartsWrapper = styled.div`\r\n  display: flex;\r\n  @media only screen and (max-width: 600px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NoResultsContainer = styled.div`\r\n  width: 100vw;\r\n  min-height: 5vh;\r\n  position: absolute;\r\n  bottom: 0 !important;\r\n  background: rgb(246, 245, 240);\r\n  background: linear-gradient(\r\n    180deg,\r\n    rgba(246, 245, 240, 0.3617822128851541) 0%,\r\n    rgba(21, 21, 21, 0.7035189075630253) 0%,\r\n    rgba(21, 21, 21, 1) 100%\r\n  );\r\n  padding: 2rem;\r\n  box-shadow: 0rem 0rem 15em 0.2em #fff;\r\n  color: #fff;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoaderWrapper = styled.div`\r\n  height: inherit;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TableWrapper = styled.div`\r\n  width: 80vw;\r\n  color: #fff;\r\n  padding: 0.5rem;\r\n  border: 1px solid #fff;\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  @media only screen and (max-width: 975px) {\r\n    width: 100vw;\r\n    height: 85vh;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SignUpWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { SimpleButton, IconButton, Button } from \"../buttons\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport Typography from \"react-styled-typography\";\r\nimport { AiOutlineUser } from \"react-icons/ai\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ProfilePopup } from \"../profile\";\r\nimport { Dropdown } from \"../others\";\r\nimport { useAppSelector } from \"../../hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ActionTypes } from \"../../state/action-types\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport AnimatedNumber from \"react-animated-numbers\";\r\nimport { secondary } from \"../../styles/colors\";\r\nimport { Box } from \"../wrappers\";\r\n\r\nconst NavBar = styled.header`\r\n  display: flex;\r\n  padding: 0.5rem;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: rgba(246, 245, 240, 0.6);\r\n`;\r\n\r\nconst GlobalCases = styled.div`\r\n  color: #fff;\r\n  @media only screen and (max-width: 600px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst GlobalCasesContent = styled.div`\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst GlobalCasesContentWrapper = styled.div`\r\n  display: flex;\r\n  background: ${secondary};\r\n`;\r\n\r\nexport const Nav = (): JSX.Element => {\r\n  const [error, setError] = useState(\"\");\r\n  const { logout, currentUser } = useAuth();\r\n  const { cases, deaths } = useAppSelector(\r\n    (state) => state.chartData.globalCases\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [popupActive, setPopUpActive] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleMouseEnter = useCallback(() => {\r\n    setPopUpActive(true);\r\n  }, []);\r\n\r\n  const handleMouseLeave = useCallback(() => {\r\n    setPopUpActive(false);\r\n  }, []);\r\n\r\n  const handleLogout = async () => {\r\n    setError(\"\");\r\n    try {\r\n      await logout();\r\n      history.push(\"/\");\r\n    } catch {\r\n      setError(\"Failed to log out\");\r\n    }\r\n  };\r\n\r\n  const animatedDeaths = (\r\n    <AnimatedNumber\r\n      animateToNumber={deaths}\r\n      includeComma\r\n      delay={1000}\r\n      config={{ tension: 89, friction: 40 }}\r\n      animationType={\"calm\"}\r\n    />\r\n  );\r\n\r\n  const animatedCases = (\r\n    <AnimatedNumber\r\n      animateToNumber={cases}\r\n      includeComma\r\n      delay={1000}\r\n      config={{ tension: 89, friction: 40 }}\r\n      animationType={\"calm\"}\r\n    />\r\n  );\r\n\r\n  const toggleModal = useCallback(() => {\r\n    dispatch({ type: ActionTypes.TOGGLE_MODAL });\r\n  }, []);\r\n\r\n  return (\r\n    <NavBar>\r\n      <h1>C19</h1>\r\n      <GlobalCases>\r\n        <GlobalCasesContentWrapper>\r\n          <GlobalCasesContent>\r\n            <Typography variant=\"p\" align=\"center\">\r\n              Global cases\r\n            </Typography>\r\n            <Typography variant=\"h4\">\r\n              {cases ? (\r\n                animatedCases\r\n              ) : (\r\n                <Loader type=\"Puff\" width={10} height={10} color=\"#fff\" />\r\n              )}\r\n            </Typography>\r\n          </GlobalCasesContent>\r\n          <GlobalCasesContent>\r\n            <Typography variant=\"p\" align=\"center\">\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h4\">\r\n              {deaths ? (\r\n                animatedDeaths\r\n              ) : (\r\n                <Loader type=\"Puff\" width={10} height={10} color=\"#fff\" />\r\n              )}\r\n            </Typography>\r\n          </GlobalCasesContent>\r\n        </GlobalCasesContentWrapper>\r\n        <SimpleButton onClick={toggleModal}>Show all countries</SimpleButton>\r\n      </GlobalCases>\r\n\r\n      <Dropdown\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n        onClick={handleMouseEnter}\r\n      >\r\n        <IconButton>\r\n          <AiOutlineUser size={30} />\r\n        </IconButton>\r\n        <ProfilePopup driveIn={popupActive}>\r\n          <Typography variant=\"h6\">User: {currentUser?.email} </Typography>\r\n          <Box mt=\"1rem\">\r\n            <Button onClick={handleLogout} width=\"100%\">\r\n              Log out\r\n            </Button>\r\n          </Box>\r\n          {error && <Typography variant=\"h6\">{error}</Typography>}\r\n        </ProfilePopup>\r\n      </Dropdown>\r\n    </NavBar>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useAppSelector } from \"../hooks\";\r\nimport {\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  Tooltip,\r\n  CartesianGrid,\r\n  Area,\r\n  LineChart,\r\n  YAxis,\r\n  Line,\r\n} from \"recharts\";\r\n\r\nexport const VaccineChart = (): JSX.Element => {\r\n  const vaccineData = useAppSelector((state) => state.chartData.vaccinated);\r\n\r\n  const [data, setData] = useState<{ date: string; Vaccinated: unknown }[]>();\r\n\r\n  const formatVaccineData = () => {\r\n    const formattedData: { date: string; Vaccinated: unknown }[] = [];\r\n    if (vaccineData.timeline) {\r\n      Object.entries(vaccineData.timeline).map((key) => {\r\n        formattedData.push({\r\n          date: new Date(key[0]).toLocaleDateString(),\r\n          Vaccinated: key[1],\r\n        });\r\n      });\r\n    }\r\n\r\n    return setData(formattedData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    formatVaccineData();\r\n  }, [vaccineData]);\r\n\r\n  return (\r\n    <ResponsiveContainer\r\n      className=\"custom-chart vaccine-chart\"\r\n      minHeight={175}\r\n      minWidth={300}\r\n    >\r\n      <LineChart data={data}>\r\n        <defs>\r\n          <linearGradient id=\"color\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"0%\" stopColor=\"#2451b7\" strokeOpacity={0.4} />\r\n            <stop offset=\"75%\" stopColor=\"#2451b7\" stopOpacity={0.05} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area dataKey=\"\" stroke=\"#2451b7\" fill=\"url(#color)\" />\r\n        <XAxis dataKey=\"date\" axisLine={false} tickLine={false} stroke=\"#000\" />\r\n        <YAxis\r\n          dataKey=\"Vaccinated\"\r\n          axisLine={false}\r\n          tickLine={false}\r\n          tickCount={10}\r\n          stroke=\"#000\"\r\n        />\r\n        <Tooltip />\r\n        <CartesianGrid opacity={0.1} vertical={false} />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"Vaccinated\"\r\n          stroke=\"#2451b7\"\r\n          fill=\"url(#color)\"\r\n        />{\" \"}\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n  padding: 0.7rem 0.3rem;\r\n  border: 1px solid #f5f5f5;\r\n  width: 100%;\r\n  font-size: 20px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Select = styled.select`\r\n  width: 100%;\r\n  height: 35px;\r\n  background: white;\r\n  color: gray;\r\n  padding-left: 5px;\r\n  font-size: 14px;\r\n  border: none;\r\n\r\n  option {\r\n    color: black;\r\n    background: white;\r\n    display: flex;\r\n    white-space: pre;\r\n    min-height: 20px;\r\n    padding: 0px 2px 1px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useAppSelector } from \"../hooks\";\r\nimport {\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  Tooltip,\r\n  CartesianGrid,\r\n  Area,\r\n  LineChart,\r\n  YAxis,\r\n  Line,\r\n} from \"recharts\";\r\nimport { VaccineChart } from \"./VaccinesChart\";\r\nimport styled from \"styled-components\";\r\nimport Typography from \"react-styled-typography\";\r\nimport { ICountriesInfo } from \"../types/covidTypes\";\r\nimport { Select } from \"../components/inputs\";\r\nimport { Box, ChartsWrapper, NoResultsContainer } from \"../components/wrappers\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ActionTypes } from \"../state/action-types\";\r\n\r\nconst Footer = styled.footer`\r\n  width: 100vw;\r\n  min-height: 10vh;\r\n  position: absolute;\r\n  bottom: 0 !important;\r\n  background: rgb(246, 245, 240, 0.98);\r\n  padding: 1rem 2rem 0.2rem 1rem;\r\n`;\r\n\r\nconst ChartsDescriptionWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n  color: #ddd;\r\n  @media only screen and (max-width: 600px) {\r\n    display: block;\r\n  }\r\n`;\r\nexport const HideOnMobile = styled.div`\r\n  @media only screen and (max-width: 600px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const CovidChart = (): JSX.Element => {\r\n  const { countriesInfo }: { countriesInfo: ICountriesInfo[] } = useAppSelector(\r\n    (state) => state.chartData\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { error } = useAppSelector((state) => state.loadingAndError);\r\n\r\n  const onChartPeriodChange = (e: { target: { value: string } }) => {\r\n    dispatch({\r\n      type: ActionTypes.CONTROL_CHART_PERIOD,\r\n      payload: e.target.value,\r\n    });\r\n    dispatch({ type: ActionTypes.GET_CHART_DATA });\r\n  };\r\n\r\n  if (error || !countriesInfo.length)\r\n    return (\r\n      <NoResultsContainer>\r\n        No data available on this destination, unfortunately.\r\n      </NoResultsContainer>\r\n    );\r\n\r\n  return (\r\n    <Footer>\r\n      <Typography variant=\"h1\" color=\"#000\" marginB=\"15\" align=\"right\">\r\n        {countriesInfo.length && countriesInfo[0].country}\r\n      </Typography>\r\n      <ChartsDescriptionWrapper>\r\n        <Typography variant=\"h4\" marginB=\"10\" color=\"#000\">\r\n          Total cases/deaths/recovered\r\n        </Typography>\r\n        <Box width=\"300px\">\r\n          <Select placeholder=\"Control chart\" onChange={onChartPeriodChange}>\r\n            <option value=\"360\">Control chart</option>{\" \"}\r\n            <option value=\"7\">7 days</option>\r\n            <option value=\"30\">30 days</option>\r\n            <option value=\"60\">60 days</option>\r\n          </Select>\r\n        </Box>\r\n        <HideOnMobile>\r\n          <Typography variant=\"h4\" marginB=\"10\" color=\"#000\">\r\n            Total vaccinated\r\n          </Typography>\r\n        </HideOnMobile>\r\n      </ChartsDescriptionWrapper>\r\n      <ChartsWrapper>\r\n        {\" \"}\r\n        <ResponsiveContainer\r\n          className=\"custom-chart covid-chart\"\r\n          minWidth={300}\r\n          height={175}\r\n        >\r\n          <LineChart data={countriesInfo && countriesInfo}>\r\n            <Area dataKey=\"Cases\" />\r\n            <XAxis\r\n              dataKey=\"Date\"\r\n              axisLine={false}\r\n              tickLine={false}\r\n              stroke=\"#000\"\r\n            />\r\n            <YAxis\r\n              dataKey=\"Cases\"\r\n              axisLine={false}\r\n              tickLine={false}\r\n              tickCount={10}\r\n              stroke=\"#000\"\r\n            />\r\n            <Tooltip />\r\n            <CartesianGrid opacity={0.1} vertical={false} />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"Cases\"\r\n              stroke=\"#2451b7\"\r\n              fill=\"url(#color)\"\r\n            />\r\n\r\n            <Line type=\"monotone\" dataKey=\"Recovered\" stroke=\"green\" />\r\n            <Line type=\"monotone\" dataKey=\"Deaths\" stroke=\"#d12b28\" />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n        <VaccineChart />\r\n      </ChartsWrapper>\r\n    </Footer>\r\n  );\r\n};\r\n","import { MarkerColors } from \"../styles/colors\";\r\n\r\nexport const formatMarkerSizeByCases = (cases: number): number => {\r\n  if (cases < 1000) {\r\n    return 10;\r\n  } else if (cases > 1000 && cases < 3000) {\r\n    return 15;\r\n  } else if (cases > 3000 && cases < 10000) {\r\n    return 25;\r\n  } else if (cases < 100) {\r\n    return 5;\r\n  } else if (cases > 10000 && cases < 100000) {\r\n    return 35;\r\n  }\r\n  return 50;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/oval.9a66bd4d.svg\";","export default __webpack_public_path__ + \"static/media/greenOval.5e6890df.svg\";","import React from \"react\";\r\nimport { Marker } from \"@react-google-maps/api\";\r\nimport { formatMarkerSizeByCases } from \"../../helpers/formatHelpers\";\r\nimport oval from \"../../assets/oval.svg\";\r\nimport greenOval from \"../../assets/greenOval.svg\";\r\nimport { useAppSelector } from \"../../hooks\";\r\n\r\nexport const CustomMarker = ({\r\n  countryInfo,\r\n  cases,\r\n  onMouseOver,\r\n  onMouseOut,\r\n  onClick,\r\n}: {\r\n  onClick: () => void;\r\n  onMouseOut?: () => void;\r\n  onMouseOver?: () => void;\r\n  countryInfo: { lat: number; long: number; iso2: string };\r\n  cases: number;\r\n}): JSX.Element => {\r\n  const { countryCode } = useAppSelector((state) => state.chartData);\r\n\r\n  return (\r\n    <Marker\r\n      animation={\r\n        countryCode === countryInfo.iso2\r\n          ? google.maps.Animation.BOUNCE\r\n          : undefined\r\n      }\r\n      options={{\r\n        optimized: true,\r\n      }}\r\n      onMouseOut={onMouseOut}\r\n      onMouseOver={onMouseOver}\r\n      position={{ lat: countryInfo.lat, lng: countryInfo.long }}\r\n      clickable={true}\r\n      onClick={onClick}\r\n      icon={{\r\n        url: countryCode === countryInfo.iso2 ? greenOval : oval,\r\n        anchor: new google.maps.Point(17, 46),\r\n        origin: new window.google.maps.Point(0, 0),\r\n\r\n        scaledSize: new google.maps.Size(\r\n          formatMarkerSizeByCases(cases),\r\n          formatMarkerSizeByCases(cases)\r\n        ),\r\n      }}\r\n    ></Marker>\r\n  );\r\n};\r\n","import React, { useCallback } from \"react\";\r\nimport { InfoWindow } from \"@react-google-maps/api\";\r\nimport styled from \"styled-components\";\r\nimport { Box } from \"../wrappers\";\r\nimport { useAppSelector } from \"../../hooks\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { ICovidData } from \"../../types/covidTypes\";\r\nimport Typography from \"react-styled-typography\";\r\n\r\nconst nf = Intl.NumberFormat();\r\n\r\nconst CountryInfo = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  min-width: 10rem;\r\n`;\r\n\r\ninterface ICountryDetails {\r\n  _id: number;\r\n  long: number;\r\n  lat: number;\r\n  iso2: string;\r\n  iso3: string;\r\n  flag: string;\r\n}\r\n\r\ninterface ICountryObject {\r\n  countryInfo: ICountryDetails;\r\n  population: number;\r\n  cases: number;\r\n  country: string;\r\n}\r\n\r\nexport const CustomInfoWindow = ({\r\n  selected,\r\n}: {\r\n  selected: ICountryObject;\r\n  setSelected: (args: null | ICovidData) => void;\r\n}): JSX.Element => {\r\n  const { loading } = useAppSelector((state) => state.loadingAndError);\r\n\r\n  return (\r\n    <InfoWindow\r\n      position={{\r\n        lat: selected.countryInfo.lat,\r\n        lng: selected.countryInfo.long,\r\n      }}\r\n    >\r\n      <div>\r\n        <Box mb=\"0.3rem\">\r\n          <CountryInfo>\r\n            <h4>{selected.country}</h4>\r\n            <img\r\n              srcSet={selected.countryInfo.flag}\r\n              style={{ height: \"15px\" }}\r\n            />\r\n          </CountryInfo>\r\n        </Box>\r\n        <Typography variant=\"h5\" marginT=\"10\">\r\n          Population: {nf.format(selected.population)}\r\n        </Typography>\r\n        <Typography variant=\"h5\" marginT=\"5\" marginB=\"10\">\r\n          Total cases: {nf.format(selected.cases)}\r\n        </Typography>\r\n        {loading ? (\r\n          <Loader type=\"Puff\" width={10} height={10} color=\"#000\" />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </InfoWindow>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport usePlacesAutocomplete, {\r\n  getGeocode,\r\n  getLatLng,\r\n} from \"use-places-autocomplete\";\r\nimport {\r\n  Combobox,\r\n  ComboboxInput,\r\n  ComboboxPopover,\r\n  ComboboxList,\r\n  ComboboxOption,\r\n} from \"@reach/combobox\";\r\n\r\nexport const GoogleMapsSearch = ({\r\n  panTo,\r\n}: {\r\n  panTo: ({ lat, lng }: { lat: number; lng: number }) => void;\r\n}): JSX.Element => {\r\n  const {\r\n    ready,\r\n    value,\r\n    suggestions: { status, data },\r\n    setValue,\r\n    clearSuggestions,\r\n  } = usePlacesAutocomplete();\r\n\r\n  const handleInput = (e: { target: { value: string } }) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleSelect = async (address: string) => {\r\n    setValue(address, false);\r\n\r\n    clearSuggestions();\r\n\r\n    try {\r\n      const results = await getGeocode({ address });\r\n      const { lat, lng } = await getLatLng(results[0]);\r\n      panTo({ lat, lng });\r\n    } catch (error) {\r\n      console.log(\"😱 Error: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <Combobox onSelect={handleSelect}>\r\n        <ComboboxInput\r\n          value={value}\r\n          onChange={handleInput}\r\n          disabled={!ready}\r\n          placeholder=\"Search your location\"\r\n        />\r\n        <ComboboxPopover>\r\n          <ComboboxList>\r\n            {status === \"OK\" &&\r\n              data.map(({ id, description }) => (\r\n                <ComboboxOption key={id} value={description} />\r\n              ))}\r\n          </ComboboxList>\r\n        </ComboboxPopover>\r\n      </Combobox>\r\n    </div>\r\n  );\r\n};\r\n","export const libraries: [\"places\"] = [\"places\"];\r\nexport const mapContainerStyle = {\r\n  height: \"93vh\",\r\n  width: \"100%\",\r\n};\r\nexport const options: {\r\n  disableDefaultUI: boolean;\r\n  zoomControl: boolean;\r\n  zoomControlOptions: { position: number };\r\n} = {\r\n  disableDefaultUI: false,\r\n  zoomControl: true,\r\n  zoomControlOptions: {\r\n    position: 5,\r\n  },\r\n};\r\nexport const center = {\r\n  lat: 43.6532,\r\n  lng: -79.3832,\r\n};\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { GoogleMap, useLoadScript } from \"@react-google-maps/api\";\r\nimport { useAppSelector } from \"../hooks\";\r\nimport { CustomMarker } from \"../components/map/CustomMarker\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport { CustomInfoWindow, GoogleMapsSearch } from \"../components/map\";\r\nimport {\r\n  libraries,\r\n  mapContainerStyle,\r\n  options,\r\n  center,\r\n} from \"../constants/googleMaps\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Typography from \"react-styled-typography\";\r\nimport { ICovidData } from \"../types/covidTypes\";\r\nimport { ActionTypes } from \"../state/action-types\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport const CustomGoogleMap = ({\r\n  children,\r\n}: {\r\n  children: JSX.Element;\r\n}): JSX.Element => {\r\n  const covidData: ICovidData[] = useAppSelector(\r\n    (state) => state.chartData.covidData\r\n  );\r\n\r\n  type Test = {\r\n    mapRef?: google.maps.Map | undefined;\r\n  };\r\n\r\n  const [selected, setSelected] = React.useState<ICovidData | null>(null);\r\n  const mapSelector = useMemo<{ mapRef?: google.maps.Map }>((): Test => {\r\n    return {\r\n      mapRef: undefined,\r\n    };\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_TOKEN as string,\r\n    libraries,\r\n  });\r\n\r\n  const onMapLoad = useCallback((map: google.maps.Map) => {\r\n    mapSelector.mapRef = map;\r\n  }, []);\r\n\r\n  const handleMarkerMouseOver = useCallback((item) => {\r\n    setSelected(item);\r\n  }, []);\r\n\r\n  const panTo = useCallback(({ lat, lng }) => {\r\n    mapSelector.mapRef?.panTo({ lat, lng });\r\n    mapSelector.mapRef?.setZoom(8);\r\n  }, []);\r\n\r\n  const handleMouseClick = useCallback((item: { iso2: string }) => {\r\n    dispatch({ type: ActionTypes.SET_COUNTRY, payload: item.iso2 });\r\n    dispatch({ type: ActionTypes.GET_CHART_DATA, payload: item.iso2 });\r\n  }, []);\r\n\r\n  const savedData = useMemo(\r\n    () =>\r\n      covidData\r\n        ? covidData.map((item: ICovidData) => {\r\n            const { countryInfo, casesPerOneMillion } = item;\r\n            return (\r\n              <CustomMarker\r\n                cases={casesPerOneMillion}\r\n                key={countryInfo._id + Math.random() * 10}\r\n                countryInfo={countryInfo}\r\n                onClick={() => handleMouseClick(countryInfo)}\r\n                onMouseOver={() => handleMarkerMouseOver(item)}\r\n                onMouseOut={() => setSelected(null)}\r\n              ></CustomMarker>\r\n            );\r\n          })\r\n        : [],\r\n    [covidData]\r\n  );\r\n\r\n  if (loadError)\r\n    return (\r\n      <Typography variant=\"h3\" color=\"#000\">\r\n        Something went wrong. Please try reloading page.\r\n      </Typography>\r\n    );\r\n  if (!isLoaded)\r\n    return <Loader type=\"Puff\" height={25} width={25} color=\"#00BFFF\" />;\r\n\r\n  return (\r\n    <GoogleMap\r\n      mapContainerStyle={mapContainerStyle}\r\n      zoom={4}\r\n      center={center}\r\n      options={options}\r\n      onLoad={onMapLoad}\r\n    >\r\n      <GoogleMapsSearch panTo={panTo} />\r\n      {savedData}\r\n      {selected && (\r\n        <CustomInfoWindow selected={selected} setSelected={setSelected} />\r\n      )}\r\n      {children}\r\n    </GoogleMap>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ErrorMsg = styled.p`\r\n  color: #ff0000;\r\n  font-size: 12px;\r\n  padding-bottom: 0.2rem;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.div`\r\n  width: 30rem;\r\n  padding: 2rem 1rem;\r\n  border: 1px solid #ddd;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  @media only screen and (max-width: 600px) {\r\n    border: none;\r\n    width: 100vw;\r\n  }\r\n`;\r\n","import React, { useState, useCallback, FormEvent } from \"react\";\r\nimport { Input } from \"../components/inputs\";\r\nimport { ButtonGroup, Button, IconButton } from \"../components/buttons\";\r\nimport { Box } from \"../components/wrappers\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { ErrorMsg } from \"../components/errors\";\r\nimport { StyledForm } from \"../components/forms\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Typography from \"react-styled-typography\";\r\nimport { VscGithub } from \"react-icons/vsc\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\n\r\nexport const LoginFlow = (): JSX.Element => {\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { login, signInWithGoogle, signInWithGithub } = useAuth();\r\n\r\n  const history = useHistory();\r\n\r\n  const submitForm = useCallback<React.FormEventHandler<HTMLFormElement>>(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      const {\r\n        currentTarget: {\r\n          email: { value: email },\r\n          password: { value: password },\r\n        },\r\n      } = e;\r\n\r\n      try {\r\n        setError(\"\");\r\n\r\n        setLoading(true);\r\n\r\n        await login(email, password);\r\n\r\n        history.push(\"/\");\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n      setLoading(false);\r\n    },\r\n    []\r\n  );\r\n\r\n  const loginWithGithub = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(\"\");\r\n      await signInWithGithub();\r\n    } catch (err) {\r\n      setLoading(false);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loginWithGoogle = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(\"\");\r\n      await signInWithGoogle();\r\n    } catch (err) {\r\n      setLoading(false);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledForm style={{ margin: \"auto\" }}>\r\n      <form onSubmit={submitForm}>\r\n        <Box mb=\"1rem\">\r\n          <h1>Sign in</h1>\r\n        </Box>\r\n        <Box mb=\"1rem\">\r\n          <ButtonGroup>\r\n            <IconButton onClick={loginWithGithub} type=\"button\">\r\n              <VscGithub size={30} />\r\n            </IconButton>\r\n            <IconButton onClick={loginWithGoogle} type=\"button\">\r\n              <FcGoogle size={30} />\r\n            </IconButton>\r\n          </ButtonGroup>\r\n        </Box>\r\n        <Box mb=\"1rem\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <Input type=\"email\" name=\"email\" required />\r\n        </Box>\r\n        <Box mb=\"0.5rem\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <Input type=\"password\" name=\"password\" required />\r\n        </Box>\r\n        <Box>\r\n          <ErrorMsg>{error}</ErrorMsg>\r\n        </Box>\r\n        <Box mb=\"0.2rem\">\r\n          <Typography variant=\"p\">\r\n            Don`t have an account? Sign up <Link to=\"/signup\">here.</Link>\r\n          </Typography>\r\n        </Box>\r\n        <Box mb=\"0.2rem\">\r\n          <Typography variant=\"p\">\r\n            Forgot your password? Reset <Link to=\"/reset_password\">here.</Link>\r\n          </Typography>\r\n        </Box>\r\n        <ButtonGroup>\r\n          <Button type=\"submit\" disabled={loading}>\r\n            {loading ? (\r\n              <Loader type=\"Puff\" height={15} width={15} color=\"#fff\" />\r\n            ) : (\r\n              \"Sign in\"\r\n            )}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </form>\r\n    </StyledForm>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Typography from \"react-styled-typography\";\r\nimport {\r\n  Column,\r\n  useFilters,\r\n  usePagination,\r\n  useSortBy,\r\n  useTable\r\n} from \"react-table\";\r\nimport uuid from \"react-uuid\";\r\nimport { useAppSelector } from \"../../hooks\";\r\nimport { ActionTypes } from \"../../state/action-types\";\r\nimport { ICovidData } from \"../../types/covidTypes\";\r\nimport { Button, ButtonGroup } from \"../buttons\";\r\nimport { Input } from \"../inputs\";\r\nimport { Box } from \"../wrappers\";\r\n\r\ntype TableDataType = {\r\n  country: string;\r\n  cases: string;\r\n  recovered: string;\r\n  deaths: string;\r\n  tests: string;\r\n  population: string;\r\n};\r\n\r\nconst default_columns = [\r\n  {\r\n    Header: \"Country\",\r\n    accessor: \"country\"\r\n  },\r\n  {\r\n    Header: \"Cases\",\r\n    accessor: \"cases\"\r\n  },\r\n  {\r\n    Header: \"Recovered\",\r\n    accessor: \"recovered\"\r\n  },\r\n  {\r\n    Header: \"Deaths\",\r\n    accessor: \"deaths\"\r\n  },\r\n  {\r\n    Header: \"Tests\",\r\n    accessor: \"tests\"\r\n  },\r\n  {\r\n    Header: \"Population\",\r\n    accessor: \"population\"\r\n  }\r\n] as Array<Column<TableDataType>>;\r\n\r\nconst nf = Intl.NumberFormat();\r\n\r\nexport const Table = (): JSX.Element => {\r\n  const { covidData }: { covidData: ICovidData[] } = useAppSelector(\r\n    (state) => state.chartData\r\n  );\r\n\r\n  const [filterInput, setFilterInput] = useState(\"\");\r\n\r\n  // Update the state when input changes\r\n  const handleFilterChange = useCallback((e) => {\r\n    const value = e.target.value || undefined;\r\n    setFilter(\"country\", value);\r\n    setFilterInput(value);\r\n  }, []);\r\n\r\n  const data = useMemo(() => {\r\n    return covidData.map(\r\n      ({ country, cases, recovered, deaths, tests, population }) => {\r\n        return {\r\n          country,\r\n          cases: nf.format(cases),\r\n          recovered: nf.format(recovered),\r\n          deaths: nf.format(deaths),\r\n          tests: nf.format(tests),\r\n          population: nf.format(population)\r\n        };\r\n      }\r\n    );\r\n  }, [covidData]);\r\n\r\n  const columns = useMemo(() => default_columns, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    setFilter,\r\n    nextPage,\r\n    previousPage,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    state,\r\n    gotoPage,\r\n    pageCount\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const { pageIndex } = state;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: ActionTypes.GET_COVID_DATA });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Box width=\"300px\" mb=\"1rem\">\r\n        <Input\r\n          type=\"text\"\r\n          value={filterInput}\r\n          onChange={handleFilterChange}\r\n          placeholder={\"Search by country\"}\r\n        />{\" \"}\r\n      </Box>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} key={uuid()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th\r\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  key={uuid()}\r\n                >\r\n                  {column.render(\"Header\")}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()} key={uuid()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()} key={uuid()}>\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        <Box mt=\"0.5rem\">\r\n          <Typography color=\"#000\" as=\"span\">\r\n            Page{\" \"}\r\n            <strong>\r\n              {pageIndex + 1} of {pageOptions.length}\r\n            </strong>{\" \"}\r\n            <input\r\n              style={{ width: \"50px\", marginLeft: \"10px\" }}\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={(e) => {\r\n                const pageNum = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                gotoPage(pageNum);\r\n              }}\r\n            />\r\n          </Typography>\r\n        </Box>\r\n        <Box mt=\"0.5rem\">\r\n          <ButtonGroup>\r\n            <Button\r\n              color=\"#fff\"\r\n              onClick={() => gotoPage(0)}\r\n              disabled={!canPreviousPage}\r\n            >\r\n              {\"<<\"}\r\n            </Button>\r\n            <Button onClick={previousPage} disabled={!canPreviousPage}>\r\n              Previous\r\n            </Button>\r\n            <Button onClick={nextPage} disabled={!canNextPage}>\r\n              Next\r\n            </Button>\r\n            <Button\r\n              color=\"#fff\"\r\n              onClick={() => gotoPage(pageCount - 1)}\r\n              disabled={!canNextPage}\r\n            >\r\n              {\">>\"}\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Box>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useAppSelector } from \"../../hooks\";\r\nimport { ActionTypes } from \"../../state/action-types\";\r\nimport { Table } from \"../tables\";\r\nimport { TableWrapper } from \"../wrappers\";\r\nimport { VscChromeClose } from \"react-icons/vsc\";\r\nimport { primary } from \"../../styles/colors\";\r\n\r\ninterface IModal {\r\n  modalAnimation: boolean;\r\n}\r\n\r\nconst Modal = styled.div<IModal>`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: ${primary};\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  z-index: -10;\r\n  opacity: 0;\r\n  transform: translateX(100vw);\r\n  transition: all 0.3s ease-in-out;\r\n  ${({ modalAnimation }) =>\r\n    modalAnimation &&\r\n    css`\r\n      opacity: 1;\r\n      z-index: 50;\r\n      transform: translateX(0);\r\n    `}\r\n`;\r\n\r\nconst CloseModal = styled.button`\r\n  position: fixed;\r\n  top: 0.5rem;\r\n  right: 1.5rem;\r\n  color: #fff;\r\n  font-size: 2rem;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: color 0.2s ease;\r\n  &:hover {\r\n    color: #ddd;\r\n  }\r\n`;\r\n\r\nexport const CovidModal = (): JSX.Element => {\r\n  const modalStatus = useAppSelector((state) => state.modals.covidModal);\r\n  const dispatch = useDispatch();\r\n\r\n  const closeModal = useCallback(() => {\r\n    dispatch({ type: ActionTypes.TOGGLE_MODAL });\r\n  }, []);\r\n\r\n  const memoModal = useMemo(() => {\r\n    return (\r\n      <Modal modalAnimation={modalStatus}>\r\n        <CloseModal onClick={closeModal}>\r\n          <VscChromeClose size={30} color=\"#000\" />\r\n        </CloseModal>\r\n        <TableWrapper>\r\n          <Table />\r\n        </TableWrapper>\r\n      </Modal>\r\n    );\r\n  }, [modalStatus]);\r\n\r\n  return <>{memoModal}</>;\r\n};\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ActionTypes } from \"../state/action-types\";\r\nimport { Nav } from \"../components/headers\";\r\nimport { CustomGoogleMap, CovidChart } from \"../containers\";\r\nimport Geocode from \"react-geocode\";\r\nimport { CovidModal } from \"../components/modals\";\r\nimport { useAppSelector } from \"../hooks\";\r\n\r\nGeocode.setApiKey(process.env.REACT_APP_GOOGLE_MAPS_TOKEN!);\r\n\r\nexport const CovidMap = (): JSX.Element => {\r\n  const { countriesInfo } = useAppSelector((state) => state.chartData);\r\n  const dispatch = useDispatch();\r\n\r\n  const memoChart = useMemo(() => {\r\n    return <CovidChart />;\r\n  }, [countriesInfo]);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: ActionTypes.GET_COVID_DATA });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <CovidModal />\r\n      <CustomGoogleMap>{memoChart}</CustomGoogleMap>\r\n    </>\r\n  );\r\n};\r\n","export enum URLS {\r\n  PRIMARY_API = \"https://disease.sh/v3/covid-19\",\r\n}\r\n","import styled from \"styled-components\";\r\nimport { primary } from \"../styles/colors\";\r\n\r\nexport const HomePresentation = styled.div`\r\n  padding: 2rem 0.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background: ${primary};\r\n  width: 50%;\r\n  @media only screen and (max-width: 1000px) {\r\n    display: none;\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { AuthWrapper } from \"../components/wrappers\";\r\nimport { LoginFlow } from \"../containers\";\r\nimport { HomePresentation } from \"../layouts/HomePresentation\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const Home = (): JSX.Element => {\r\n  const { currentUser } = useAuth();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    currentUser ? history.push(\"/covidmap\") : history.push(\"/\");\r\n  }, [currentUser]);\r\n  return (\r\n    <AuthWrapper>\r\n      <HomePresentation>\r\n        <h1>Hello there!</h1>\r\n        <h3 style={{ textAlign: \"center\" }}>\r\n          Get live data about <br /> Covid-19 with no worries\r\n        </h3>\r\n        <div />\r\n      </HomePresentation>\r\n      <LoginFlow />\r\n    </AuthWrapper>\r\n  );\r\n};\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { Input } from \"../components/inputs\";\r\nimport { Button } from \"../components/buttons\";\r\nimport { Box } from \"../components/wrappers\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { StyledForm } from \"../components/forms\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { SignUpWrapper } from \"../components/wrappers\";\r\nimport { ErrorMsg } from \"../components/errors\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport const ResetPassword = (): JSX.Element => {\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { resetPassword } = useAuth();\r\n\r\n  const submitForm = useCallback<React.FormEventHandler<HTMLFormElement>>(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      const {\r\n        currentTarget: {\r\n          email: { value: email },\r\n        },\r\n      } = e;\r\n\r\n      try {\r\n        setError(\"\");\r\n        setMessage(\"Please check your email for further action.\");\r\n        setLoading(true);\r\n        await resetPassword(email);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setMessage(\"\");\r\n      }\r\n      setLoading(false);\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <SignUpWrapper>\r\n      <StyledForm>\r\n        <form onSubmit={submitForm}>\r\n          <Box mb=\"2rem\">\r\n            <h1>Reset password</h1>\r\n          </Box>\r\n          <Box pb=\"0.5rem\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <Input type=\"email\" name=\"email\" required />\r\n          </Box>\r\n\r\n          <Box>\r\n            <ErrorMsg>{error}</ErrorMsg>\r\n          </Box>\r\n\r\n          <Box mb=\"1rem\">\r\n            {message && <p style={{ color: \"green\" }}>{message}</p>}\r\n            <p>\r\n              Go to <Link to=\"/\">log in.</Link>\r\n            </p>\r\n          </Box>\r\n          <Button type=\"submit\" disabled={loading}>\r\n            {loading ? (\r\n              <Loader type=\"Puff\" height={15} width={15} color=\"#fff\" />\r\n            ) : (\r\n              \"Reset\"\r\n            )}\r\n          </Button>\r\n        </form>\r\n      </StyledForm>\r\n    </SignUpWrapper>\r\n  );\r\n};\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { Input } from \"../components/inputs\";\r\nimport { Button } from \"../components/buttons\";\r\nimport { Box, SignUpWrapper } from \"../components/wrappers\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { StyledForm } from \"../components/forms\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { ErrorMsg } from \"../components/errors\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport const Signup = (): JSX.Element => {\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { signup } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const submitForm = useCallback<React.FormEventHandler<HTMLFormElement>>(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      const {\r\n        currentTarget: {\r\n          email: { value: email },\r\n          password: { value: password },\r\n          password2: { value: password2 },\r\n        },\r\n      } = e;\r\n\r\n      if (password !== password2) {\r\n        setError(\"Ooops, looks like your passwords does not match.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setError(\"\");\r\n        setLoading(true);\r\n        await signup(email, password);\r\n        history.push(\"/\");\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n      setLoading(false);\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <SignUpWrapper>\r\n      <StyledForm>\r\n        <form onSubmit={submitForm}>\r\n          <Box mb=\"2rem\">\r\n            <h1>Sign up</h1>\r\n          </Box>\r\n          <Box pb=\"1rem\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <Input type=\"email\" name=\"email\" required />\r\n          </Box>\r\n          <Box mb=\"1rem\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <Input type=\"password\" name=\"password\" required />\r\n          </Box>\r\n          <Box mb=\"0.5rem\">\r\n            <label htmlFor=\"password2\">Confirm password</label>\r\n            <Input type=\"password\" name=\"password2\" required />\r\n          </Box>\r\n          <Box>\r\n            <ErrorMsg>{error}</ErrorMsg>\r\n          </Box>\r\n          <Box mb=\"1rem\">\r\n            <p>\r\n              Already have an account? Sign in <Link to=\"/\">here.</Link>\r\n            </p>\r\n          </Box>\r\n          <Button type=\"submit\" disabled={loading}>\r\n            {loading ? (\r\n              <Loader type=\"Puff\" height={15} width={15} color=\"#fff\" />\r\n            ) : (\r\n              \"Sign up\"\r\n            )}\r\n          </Button>\r\n        </form>\r\n      </StyledForm>\r\n    </SignUpWrapper>\r\n  );\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { primary, secondary } from \"./colors\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n* {\r\n    box-sizing: border-box;\r\n    padding: 0 ;\r\n    margin: 0 ;\r\n    font-family: 'Open Sans', sans-serif;\r\n\r\n}\r\nbody {\r\n    font-size: 13px;\r\n    overflow-x: hidden;\r\n}\r\nh1, h2, h3, h4, h5, h6 {\r\n    font-family: 'Raleway', sans-serif;\r\n}\r\n\r\n.search {\r\n  position: absolute;\r\n  max-width: 400px;\r\n  right: 4rem;\r\n  top: 0.75em;\r\n  @media only screen and (max-width: 600px) {\r\n    right: 0.65rem;\r\n    top: 3.5rem;\r\n\r\n}\r\n}\r\n\r\n.search input {\r\n  padding: 0.85rem 0.5rem;\r\n  font-size: 0.9rem;\r\nwidth: 100%;\r\nborder: none;\r\nborder-radius: 0.15rem;\r\n\r\n}\r\n\r\nh3 {\r\n    line-height: 34px;\r\n}\r\n\r\n.gm-style .gm-style-iw-c {\r\n  transform: translate(-50%, -140%)\r\n}\r\n\r\n.gm-style .gm-style-iw-t::after {\r\n  display: none;\r\n}\r\n\r\n.gm-ui-hover-effect {\r\n  display: none !important;\r\n}\r\n\r\n::placeholder {\r\n  font-size: 12px;\r\n}\r\n\r\n.vaccine-chart {\r\n  padding-left: 1rem !important;\r\n  @media only screen and (max-width: 600px) {\r\n    display: none;\r\n  }\r\n}\r\n\r\ntable {\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n  font-size: 16px;\r\n}\r\n\r\nth, td {\r\n  text-align: left;\r\n  padding: 8px;\r\n}\r\n\r\ntr:nth-child(odd){background-color: ${primary}; color: #000}\r\n\r\ntr:nth-child(even){background-color: ${secondary}; color: #fff}\r\n\r\nth {\r\n  background-color: ${secondary};\r\n  color: white;\r\n}\r\n\r\n.recharts-text, .recharts-cartesian-axis-tick-value {\r\n  font-weight: 800 ;\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport { Home, CovidMap, Signup, ResetPassword } from \"./pages\";\r\nimport {\r\n  Route,\r\n  RouteProps,\r\n  Redirect,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { GlobalStyle } from \"./styles/GlobalStyles\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { useAuth } from \"./contexts/AuthContext\";\r\nimport { Table } from \"./components/tables\";\r\n\r\nconst PrivateRoute = ({\r\n  children,\r\n  ...props\r\n}: React.PropsWithChildren<RouteProps>) => {\r\n  const { currentUser } = useAuth();\r\n\r\n  if (!currentUser) return <Redirect to=\"/\" />;\r\n  return <Route {...props}>{children}</Route>;\r\n};\r\nexport const App = (): JSX.Element => {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <GlobalStyle />\r\n      <Route path=\"/\" component={Home} exact />\r\n      <PrivateRoute path=\"/covidmap\" component={CovidMap} exact />\r\n      <Route path=\"/signup\" component={Signup} exact />\r\n      <Route path=\"/table\" component={Table} exact />\r\n      <Route path=\"/reset_password\" component={ResetPassword} exact />\r\n    </Router>\r\n  );\r\n};\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport { URLS } from \"./constant\";\r\n\r\nexport const handleGetRequest = async <T>(url?: string): Promise<T> => {\r\n  const { data }: AxiosResponse<T> = await axios({\r\n    method: \"GET\",\r\n    url: `${URLS.PRIMARY_API}/${url}`,\r\n  });\r\n\r\n  return data;\r\n};\r\n","import { takeEvery, call, put, all, select } from \"redux-saga/effects\";\r\nimport { handleGetRequest } from \"../../api/get\";\r\nimport { ActionTypes } from \"../action-types\";\r\n\r\ninterface IChartData {\r\n  country: string;\r\n  timeline: {\r\n    cases: { key: string; value: number };\r\n    recovered: { key: string; value: number };\r\n    deaths: { key: string; value: number };\r\n  };\r\n}\r\n\r\nconst formatData = (chartData: IChartData) => {\r\n  const casesToPropoObjects = Object.entries(chartData.timeline.cases).map(\r\n    (key) => {\r\n      return {\r\n        Date: key[0],\r\n        Cases: key[1],\r\n      };\r\n    }\r\n  );\r\n\r\n  const modifiedChartData = casesToPropoObjects.map((each, i: number) => {\r\n    return {\r\n      ...each,\r\n      Recovered: Object.values(chartData.timeline.recovered)[i],\r\n      Deaths: Object.values(chartData.timeline.deaths)[i],\r\n      country: chartData.country,\r\n    };\r\n  });\r\n  return modifiedChartData;\r\n};\r\n\r\nexport function* watchChartAction(): Generator<unknown> {\r\n  yield takeEvery(ActionTypes.GET_CHART_DATA, getChartData);\r\n}\r\n\r\nexport function* getChartData(): Generator<unknown> {\r\n  try {\r\n    const period = yield select((state) => state.chartData.period);\r\n\r\n    const countryISO2 = yield select((state) => state.chartData.countryCode);\r\n\r\n    yield put({ type: ActionTypes.LOADING_TRUE });\r\n    const [vaccinesData, chartData]: any = yield all([\r\n      call(\r\n        handleGetRequest,\r\n        `vaccine/coverage/countries/${countryISO2}?lastdays=${period}`\r\n      ),\r\n      call(handleGetRequest, `historical/${countryISO2}?lastdays=${period}`),\r\n    ]);\r\n\r\n    const modifiedChartData = formatData(chartData);\r\n\r\n    yield put({\r\n      type: ActionTypes.GET_CHART_DATA_SUCCESS,\r\n      payload: { modifiedChartData, vaccinesData },\r\n    });\r\n\r\n    yield put({\r\n      type: ActionTypes.ERROR_FALSE,\r\n    });\r\n  } catch {\r\n    yield put({ type: ActionTypes.CONTROL_CHART_PERIOD, payload: \"360\" });\r\n    yield put({ type: ActionTypes.ERROR_TRUE });\r\n  } finally {\r\n    yield put({ type: ActionTypes.LOADING_FALSE });\r\n  }\r\n}\r\n","import { takeEvery, call, put, all } from \"redux-saga/effects\";\r\nimport { handleGetRequest } from \"../../api/get\";\r\nimport { ActionTypes } from \"../action-types\";\r\nimport { watchChartAction } from \"./chart\";\r\n\r\nexport function* watchGetCovidInfo(): Generator<unknown> {\r\n  yield takeEvery(ActionTypes.GET_COVID_DATA, getCovidData);\r\n}\r\n\r\nexport function* getCovidData(): Generator<unknown> {\r\n  yield put({ type: ActionTypes.LOADING_TRUE });\r\n  try {\r\n    const covidData = yield call(handleGetRequest, \"countries\");\r\n    const globalCases = yield call(handleGetRequest, \"all\");\r\n\r\n    yield put({ type: ActionTypes.SET_GLOBAL_CASES, payload: globalCases });\r\n    yield put({ type: ActionTypes.GET_COVID_DATA_SUCCESS, payload: covidData });\r\n\r\n    yield put({ type: ActionTypes.LOADING_FALSE });\r\n    yield put({ type: ActionTypes.ERROR_FALSE });\r\n  } catch (err) {\r\n    yield put({ type: ActionTypes.ERROR_TRUE });\r\n  }\r\n}\r\n\r\nexport function* rootSaga(): Generator<unknown> {\r\n  yield all([watchGetCovidInfo(), watchChartAction()]);\r\n}\r\n","import { Action } from \"../actions\";\r\nimport { ActionTypes } from \"../action-types\";\r\nimport {\r\n  ICountriesInfo,\r\n  ICovidData,\r\n  IVaccinationData,\r\n} from \"../../types/covidTypes\";\r\n\r\ninterface IChartData {\r\n  vaccinated: IVaccinationData;\r\n  countriesInfo: ICountriesInfo[];\r\n  covidData: ICovidData[];\r\n  countryCode: string;\r\n  globalCases: ICovidData;\r\n  period: string;\r\n}\r\n\r\nconst initialState: IChartData = {\r\n  vaccinated: { country: \"\", timeline: \"\" },\r\n  countriesInfo: [],\r\n  covidData: [],\r\n  countryCode: \"\",\r\n  globalCases: {} as ICovidData,\r\n  period: \"360\",\r\n};\r\n\r\nexport const chartReducer = (\r\n  state = initialState,\r\n  action: Action\r\n): IChartData => {\r\n  switch (action.type) {\r\n    case ActionTypes.CONTROL_CHART_PERIOD:\r\n      return {\r\n        ...state,\r\n        period: action.payload,\r\n      };\r\n    case ActionTypes.SET_GLOBAL_CASES:\r\n      return {\r\n        ...state,\r\n        globalCases: action.payload,\r\n      };\r\n    case ActionTypes.SET_COUNTRY:\r\n      return {\r\n        ...state,\r\n        countryCode: action.payload,\r\n      };\r\n    case ActionTypes.GET_CHART_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        countriesInfo: action.payload.modifiedChartData,\r\n        vaccinated: action.payload.vaccinesData,\r\n      };\r\n    case ActionTypes.GET_COVID_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        covidData: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Action } from \"../actions\";\r\nimport { ActionTypes } from \"../action-types\";\r\n\r\ninterface ILoadingAndError {\r\n  loading: boolean;\r\n  error: null | boolean;\r\n}\r\n\r\nconst initialState: ILoadingAndError = {\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const loadingAndErrorReducer = (\r\n  state = initialState,\r\n  action: Action\r\n): ILoadingAndError => {\r\n  switch (action.type) {\r\n    case ActionTypes.LOADING_TRUE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ActionTypes.LOADING_FALSE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case ActionTypes.ERROR_TRUE:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case ActionTypes.ERROR_FALSE:\r\n      return {\r\n        ...state,\r\n        error: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Action } from \"../actions\";\r\nimport { ActionTypes } from \"../action-types\";\r\n\r\ninterface IModals {\r\n  covidModal: boolean;\r\n}\r\n\r\nconst initialState: IModals = {\r\n  covidModal: false,\r\n};\r\n\r\nexport const modals = (state = initialState, action: Action): IModals => {\r\n  switch (action.type) {\r\n    case ActionTypes.TOGGLE_MODAL:\r\n      return {\r\n        ...state,\r\n        covidModal: !state.covidModal,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { rootSaga } from \"./sagas/covid\";\r\nimport { chartReducer } from \"./reducers/chartReducer\";\r\nimport { loadingAndErrorReducer } from \"./reducers/loading&error\";\r\nimport { modals } from \"./reducers/modals\";\r\n\r\nconst rootReducer = combineReducers({\r\n  chartData: chartReducer,\r\n  loadingAndError: loadingAndErrorReducer,\r\n  modals: modals,\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./state/store\";\r\nimport { AuthProvider } from \"./contexts/AuthContext\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <AuthProvider>\r\n      <App />\r\n    </AuthProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}
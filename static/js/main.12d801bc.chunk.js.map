{"version":3,"sources":["constants/index.ts","components/wrappers/AuthWrapper.ts","components/inputs/Input.ts","styles/colors.ts","components/buttons/PlayButton.ts","components/wrappers/Box.ts","containers/LoginFlow.tsx","components/others/HomePresentation.tsx","pages/Home.tsx","components/others/Rectangle.ts","api/post.ts","state/action-types/index.ts","components/headers/Nav.tsx","components/wrappers/LoaderWrapper.ts","api/get.ts","pages/Game.tsx","styles/GlobalStyles.ts","App.tsx","state/sagas/gameSaga.ts","state/reducers/game.ts","state/store.ts","index.tsx"],"names":["ApiRoutes","AuthWrapper","styled","div","Input","input","primary","PlayButton","button","Box","pt","pr","pb","pl","mt","mr","mb","ml","StyledForm","H3","h3","LoginFlow","useState","username","setUsername","pickedColor","setPickedColor","history","useHistory","onSubmit","e","preventDefault","length","localStorage","setItem","push","submitForm","style","flex","display","onChange","target","value","color","onChangeComplete","hex","type","HomePresentation","Home","textAlign","Rectangle","bgrColor","positionY","positionX","width","height","BASE_URL","ActionTypes","postRequest","x","y","name","a","fetch","method","headers","body","JSON","stringify","NavBar","header","StatusWrapper","Nav","maxX","maxY","updatedTimes","getItem","LoaderWrapper","handleGetRequest","axios","url","response","data","handleGetBoardStatus","InnerHover","visibility","GameWrapper","Game","location","pathname","gameContainerRef","useRef","dispatch","useDispatch","hover","setHover","hoveredIndex","setHoveredIndex","boardStatus","setBoardStatus","useSelector","state","boardData","useEffect","FETCH_BOARD_DATA","update","ref","onClick","posX","clientX","posY","clientY","current","offsetTop","getCoords","map","i","onMouseEnter","onMouseLeave","GlobalStyle","createGlobalStyle","App","basename","process","path","component","exact","watchGetBoard","getBoardData","rootSaga","takeEvery","call","select","prevBoardData","delay","put","BOARD_STATE_SUCCESS","payload","all","initialState","loading","error","rootReducer","combineReducers","action","BOARD_STATE_ERROR","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12d801bc.chunk.js","sourcesContent":["export const BASE_URL = \"https://simutis.dev/api/board\";\r\n\r\nexport enum ApiRoutes {\r\n  getStatus = \"/status\",\r\n}\r\n\r\nexport interface ICellData {\r\n  name: string | unknown;\r\n  color: string | unknown;\r\n  createdAt: string;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const AuthWrapper = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n  padding: 1rem 0.1rem;\r\n  border: 1px solid #f5f5f5;\r\n  width: 100%;\r\n  font-size: 20px;\r\n`;\r\n","export const primary = \"#1976D2\";\r\n","import styled from \"styled-components\";\r\nimport { primary } from \"../../styles/colors\";\r\n\r\nexport const PlayButton = styled.button`\r\n  cursor: pointer;\r\n  border: none;\r\n  outline: none;\r\n  padding: 0.5rem 1rem;\r\n  background: ${primary};\r\n  color: #fff;\r\n  font-size: 16px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\ninterface IBox {\r\n  pt?: string;\r\n  pr?: string;\r\n  pb?: string;\r\n  pl?: string;\r\n\r\n  mt?: string;\r\n  mr?: string;\r\n  mb?: string;\r\n  ml?: string;\r\n}\r\n\r\nexport const Box = styled.div<IBox>`\r\n  padding-top: ${({ pt }) => `${pt}`};\r\n  padding-right: ${({ pr }) => `${pr}`};\r\n  padding-bottom: ${({ pb }) => `${pb}`};\r\n  padding-left: ${({ pl }) => `${pl}`};\r\n\r\n  margin-top: ${({ mt }) => `${mt}`};\r\n  margin-right: ${({ mr }) => `${mr}`};\r\n  margin-bottom: ${({ mb }) => `${mb}`};\r\n  margin-left: ${({ ml }) => `${ml}`};\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Input } from \"../components/inputs/Input\";\r\nimport styled from \"styled-components\";\r\nimport { PlayButton } from \"../components/buttons/PlayButton\";\r\nimport { Box } from \"../components/wrappers/Box\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { BlockPicker } from \"react-color\";\r\n\r\nconst StyledForm = styled.div`\r\n  min-width: 28rem;\r\n  padding: 2rem;\r\n  border: 1px solid #ddd;\r\n  margin: auto;\r\n  width: fit-content;\r\n`;\r\n\r\nconst H3 = styled.h3``;\r\n\r\nexport const LoginFlow = (): JSX.Element => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [pickedColor, setPickedColor] = useState(\"#d9e3f0\");\r\n\r\n  const history = useHistory();\r\n\r\n  const submitForm = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (username.length) {\r\n      localStorage.setItem(\"username\", username);\r\n      localStorage.setItem(\"color\", pickedColor);\r\n      history.push(\"/game\");\r\n    }\r\n  };\r\n\r\n  const handleChangeComplete = (color: any) => {\r\n    setPickedColor(color.hex);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => submitForm(e)}\r\n      style={{ flex: \"1\", display: \"flex\" }}\r\n    >\r\n      <StyledForm>\r\n        <Box pb=\"1rem\">\r\n          <H3>Enter username</H3>\r\n        </Box>\r\n        <Box pb=\"1rem\">\r\n          <Input onChange={(e) => setUsername(e.target.value)} />\r\n        </Box>\r\n        <Box pb=\"1rem\">Pick a color:</Box>\r\n        <Box pb=\"1rem\">\r\n          <BlockPicker\r\n            color={pickedColor}\r\n            onChangeComplete={handleChangeComplete}\r\n          />\r\n        </Box>\r\n        <PlayButton type=\"submit\">Play Game</PlayButton>\r\n      </StyledForm>\r\n    </form>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { primary } from \"../../styles/colors\";\r\n\r\nexport const HomePresentation = styled.div`\r\n  flex: 1;\r\n  padding: 2rem 0.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: #fff;\r\n  background: ${primary};\r\n`;\r\n","import React from \"react\";\r\nimport { AuthWrapper } from \"../components/wrappers/AuthWrapper\";\r\nimport { LoginFlow } from \"../containers/LoginFlow\";\r\nimport { HomePresentation } from \"../components/others/HomePresentation\";\r\n\r\nexport const Home = (): JSX.Element => {\r\n  return (\r\n    <AuthWrapper>\r\n      <HomePresentation>\r\n        <h1>Hello there!</h1>\r\n        <h3 style={{ textAlign: \"center\" }}>\r\n          Play the most colorfull game <br /> on the internet!\r\n        </h3>\r\n        <div />\r\n      </HomePresentation>\r\n      <LoginFlow />\r\n    </AuthWrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\ninterface IRectangle {\r\n  bgrColor: string;\r\n  positionY: string;\r\n  positionX: string;\r\n  width: string;\r\n  height: string;\r\n  onClick?: React.MouseEventHandler<HTMLDivElement> & (() => void);\r\n}\r\n\r\nexport const Rectangle = styled.div<IRectangle>`\r\n  position: absolute;\r\n  background: ${({ bgrColor }) => bgrColor};\r\n  top: ${({ positionY }) => `${positionY}px`};\r\n  left: ${({ positionX }) => `${positionX}px`};\r\n  width: ${({ width }) => width};\r\n  height: ${({ height }) => height};\r\n  border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;\r\n`;\r\n","import { BASE_URL } from \"../constants\";\r\n\r\nexport const postRequest = async (\r\n  x: string | number,\r\n  y: string | number,\r\n  name: string | null,\r\n  color: string | null\r\n): Promise<any> => {\r\n  await fetch(`${BASE_URL}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      x,\r\n      y,\r\n      name,\r\n      color,\r\n    }),\r\n  });\r\n};\r\n","export enum ActionTypes {\r\n  /// BOARD_STATE actions describes overall data that's being taken from /board endpoint\r\n\r\n  FETCH_BOARD_DATA = \"FETCH_BOARD_DATA\",\r\n  BOARD_STATE_SUCCESS = \"BOARD_STATE_SUCCESS\",\r\n  BOARD_STATE_ERROR = \"BOARD_STATE_ERROR\",\r\n\r\n  /// BOARD_STATUS actions describes overall status that's being taken from /board/status\r\n\r\n  /* BOARD_STATUS_PENDING = \"BOARD_STATUS_PENDING\",\r\n  BOARD_STATUS_SUCCESS = \"BOARD_STATUS_SUCCESS\",\r\n  BOARD_STATUS_ERROR = \"BOARD_STATUS_ERROR\",*/\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { primary } from \"../../styles/colors\";\r\n\r\ninterface INav {\r\n  maxX: number;\r\n  maxY: number;\r\n  updatedTimes: number;\r\n}\r\n\r\nconst NavBar = styled.header<INav>`\r\n  display: flex;\r\n  width: 100%;\r\n  min-height: 7vh;\r\n  padding: 1rem;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: ${primary};\r\n  box-shadow: 30px 0rem 50px #000;\r\n  margin-bottom: 3rem;\r\n  color: #fff;\r\n`;\r\n\r\nconst StatusWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n  border: 1px solid #fff;\r\n`;\r\n\r\nexport const Nav = ({\r\n  maxX,\r\n  maxY,\r\n  updatedTimes,\r\n}: {\r\n  maxX: number;\r\n  maxY: number;\r\n  updatedTimes: number;\r\n}): JSX.Element => {\r\n  const username = localStorage.getItem(\"username\");\r\n\r\n  return (\r\n    <NavBar maxX={maxX} maxY={maxY} updatedTimes={updatedTimes}>\r\n      <h1>Colorize</h1>\r\n      {maxX && maxY && updatedTimes && (\r\n        <StatusWrapper>\r\n          <span>maxX coord: {maxX}</span>\r\n          <span>maxY coord: {maxY}</span>\r\n          <span>Times updated: {updatedTimes}</span>\r\n        </StatusWrapper>\r\n      )}\r\n      <span>User: {username}</span>\r\n    </NavBar>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoaderWrapper = styled.div`\r\n  height: inherit;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n","import axios from \"axios\";\r\nimport { BASE_URL } from \"../constants\";\r\n\r\nexport const handleGetRequest = async <T>(): Promise<T> => {\r\n  const response = await axios({\r\n    method: \"GET\",\r\n    url: BASE_URL + \"?x=0&y=0&w=1200&h=1200\",\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const handleGetBoardStatus = async <T>(url: string): Promise<T> => {\r\n  const response = await axios({\r\n    method: \"GET\",\r\n    url: BASE_URL + url,\r\n  });\r\n  return await response.data;\r\n};\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Rectangle } from \"../components/others/Rectangle\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postRequest } from \"../api/post\";\r\nimport styled from \"styled-components\";\r\nimport { ActionTypes } from \"../state/action-types\";\r\nimport { Nav } from \"../components/headers/Nav\";\r\nimport { primary } from \"../styles/colors\";\r\nimport { LoaderWrapper } from \"../components/wrappers/LoaderWrapper\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { handleGetBoardStatus } from \"../api/get\";\r\n\r\ninterface IinnerHover {\r\n  visibility: boolean;\r\n}\r\n\r\ninterface IGameWrapper {\r\n  height?: string;\r\n}\r\n\r\nconst InnerHover = styled.div<IinnerHover>`\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  padding: 1rem;\r\n  background: ${primary};\r\n  color: #fff;\r\n  font-size: 16px;\r\n  visibility: ${({ visibility }) => (visibility ? \"visible\" : \"hidden\")};\r\n  transition: all 0.5s ease-in-out;\r\n  z-index: 10;\r\n  border-radius: 0.2rem;\r\n  min-width: 180px;\r\n  height: 0;\r\n  opacity: 0;\r\n  &:hover {\r\n    height: fit-content;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst GameWrapper = styled.div<IGameWrapper>`\r\n  width: 100%;\r\n  min-height: ${({ height }) => (height ? height : \"100vh\")};\r\n  position: relative;\r\n`;\r\n\r\nexport const Game = ({\r\n  location: { pathname },\r\n}: {\r\n  location: { pathname: string };\r\n}): JSX.Element => {\r\n  const gameContainerRef = useRef<HTMLDivElement | null>(null);\r\n  const dispatch = useDispatch();\r\n  const [hover, setHover] = useState(false);\r\n  const [hoveredIndex, setHoveredIndex] = useState<number | null>(null);\r\n  const [boardStatus, setBoardStatus] = useState<any>();\r\n\r\n  const data = useSelector(\r\n    (state: { boardData: { data: [] } }) => state.boardData.data\r\n  );\r\n\r\n  const getCoords = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    const posX = e.clientX;\r\n    const posY = e.clientY - gameContainerRef.current!.offsetTop;\r\n\r\n    const username = localStorage.getItem(\"username\");\r\n    const color = localStorage.getItem(\"color\");\r\n    postRequest(posX, posY, username, color);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: ActionTypes.FETCH_BOARD_DATA });\r\n  }, []);\r\n\r\n  useEffect((): any => {\r\n    return async () => {\r\n      const boardStatus: any = await handleGetBoardStatus(\"/status\");\r\n      boardStatus && setBoardStatus(boardStatus);\r\n    };\r\n  }, [data]);\r\n\r\n  const handleMouseEnter = (index: number) => {\r\n    setHoveredIndex(index);\r\n    setHover(true);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredIndex(null);\r\n    setHover(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Nav\r\n        maxX={boardStatus && boardStatus[0].maxX}\r\n        maxY={boardStatus && boardStatus[0].maxY}\r\n        updatedTimes={boardStatus && boardStatus[0].update}\r\n      />\r\n      <GameWrapper ref={gameContainerRef} onClick={(e) => getCoords(e)}>\r\n        {data && data.length ? (\r\n          data.map(\r\n            (\r\n              {\r\n                data: { color, name },\r\n                x,\r\n                y,\r\n              }: {\r\n                data: { name: string; color: string };\r\n                x: string;\r\n                y: string;\r\n              },\r\n              i: number\r\n            ) => {\r\n              return (\r\n                <Rectangle\r\n                  positionX={x}\r\n                  positionY={y}\r\n                  width=\"20px\"\r\n                  height=\"20px\"\r\n                  bgrColor={color}\r\n                  key={i}\r\n                  onMouseEnter={() => handleMouseEnter(i)}\r\n                  onMouseLeave={() => handleMouseLeave()}\r\n                >\r\n                  {i === hoveredIndex ? (\r\n                    <InnerHover visibility={hover}>\r\n                      <p>Name: {name}</p>\r\n                      <p>Color: {color}</p>\r\n                    </InnerHover>\r\n                  ) : null}\r\n                </Rectangle>\r\n              );\r\n            }\r\n          )\r\n        ) : (\r\n          <LoaderWrapper>\r\n            <Loader type=\"Oval\" color=\"#00BFFF\" height={80} width={80} />\r\n          </LoaderWrapper>\r\n        )}\r\n      </GameWrapper>\r\n    </>\r\n  );\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n* {\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n    font-family: 'Open Sans', sans-serif;\r\n}\r\nh1, h2, h3, h4, h5, h6 {\r\n    font-family: 'Raleway', sans-serif;\r\n}\r\n\r\n\r\nh3 {\r\n    line-height: 34px;\r\n}\r\n`;\r\n","import React from \"react\";\nimport { Home } from \"./pages/Home\";\nimport { Game } from \"./pages/Game\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { GlobalStyle } from \"./styles/GlobalStyles\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nexport const App = (): JSX.Element => {\n  return (\n    <>\n      <GlobalStyle />\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/game\" component={Game} exact />\n      </Router>\n    </>\n  );\n};\n","import { takeEvery, call, put, all, select } from \"redux-saga/effects\";\r\nimport { delay } from \"redux-saga/effects\";\r\nimport { handleGetRequest } from \"../../api/get\";\r\nimport { ActionTypes } from \"../action-types\";\r\n\r\nexport function* watchGetBoard(): Generator<unknown> {\r\n  yield takeEvery(ActionTypes.FETCH_BOARD_DATA, getBoardData);\r\n}\r\n\r\nexport function* getBoardData(): Generator<unknown> {\r\n  const boardData: any = yield call(handleGetRequest);\r\n\r\n  const prevBoardData: any = yield select((state) => state.boardData.data);\r\n  yield delay(5);\r\n\r\n  if (boardData.length !== prevBoardData.length) {\r\n    yield put({ type: ActionTypes.BOARD_STATE_SUCCESS, payload: boardData });\r\n    yield put({ type: ActionTypes.FETCH_BOARD_DATA });\r\n  } else {\r\n    yield put({ type: ActionTypes.FETCH_BOARD_DATA });\r\n  }\r\n}\r\n\r\nexport function* rootSaga(): Generator<unknown> {\r\n  yield all([watchGetBoard()]);\r\n}\r\n","import { Action } from \"../actions\";\r\nimport { ActionTypes } from \"../action-types\";\r\n\r\ninterface IBoardData {\r\n  loading: boolean;\r\n  error: null | boolean;\r\n  data: [] | unknown;\r\n}\r\n\r\nconst initialState: IBoardData = {\r\n  loading: false,\r\n  error: null,\r\n  data: [],\r\n};\r\n\r\nexport const game = (state = initialState, action: Action): IBoardData => {\r\n  switch (action.type) {\r\n    case ActionTypes.FETCH_BOARD_DATA:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ActionTypes.BOARD_STATE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        loading: false,\r\n      };\r\n    case ActionTypes.BOARD_STATE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { rootSaga } from \"./sagas/gameSaga\";\r\nimport { game } from \"./reducers/game\";\r\n\r\nconst rootReducer = combineReducers({\r\n  boardData: game,\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./state/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}